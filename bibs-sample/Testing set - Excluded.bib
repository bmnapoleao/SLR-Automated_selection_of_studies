@article{oliinyk2017structuring,
	title        = {Structuring automotive product lines and feature models: an exploratory study at Opel},
	author       = {Oliinyk, Olesia and Petersen, Kai and Schoelzke, Manfred and Becker, Martin and Schneickert, Soeren},
	year         = 2017,
	month        = {Mar},
	day          = {01},
	journal      = {Requirements Engineering},
	volume       = 22,
	number       = 1,
	pages        = {105--135},
	doi          = {10.1007/s00766-015-0237-z},
	issn         = {1432-010X},
	url          = {https://doi.org/10.1007/s00766-015-0237-z},
	keywords     = {Feature modeling, Variability modeling, Product line engineering, Case study, Empirical, Automotive},
	abstract     = {Automotive systems are highly complex and customized systems containing a vast amount of variability. Feature modeling plays a key role in customization. Empirical evidence through industry application, and in particular methodological guidance of how to structure automotive product lines and their feature models is needed. The overall aim of this work is to provide guidance to practitioners how to structure automotive product lines and their feature models, understanding strengths and weaknesses of alternative structures. The research was conducted in three phases. In the first phase, the context situation was understood using interviews and workshops. In the second phase, possible structures of product lines and feature models were evaluated based on industry feedback collected in workshops. In the third phase, the structures were implemented in the tool GEARS and practitioner feedback was collected. One key challenge was the unavailability of structuring guidelines, which was the focus of this research. The structures considered most suitable for the automotive product line were multiple product lines with modular decomposition. The structures most suitable for the feature model were functional decomposition, using context variability, models corresponding to assets, and feature categories. Other structures have been discarded, and the rationales have been presented. It was possible to support the most suitable structures with the commercial tool GEARS. The implementation in GEARS and the feedback from the practitioners provide early indications for the potential usefulness of the structures and the tool implementation.}
}
@inproceedings{limadesousa2016using,
	title        = {Using Scrum in Outsourced Government Projects: An Action Research},
	author       = {Lima De Sousa, Thatiany and Venson, Elaine and Da Costa Figueiredo, Rejane Maria and Ajax Kosloski, Ricardo and Miyadaira Ribeiro, Luiz Carlos},
	year         = 2016,
	month        = {Jan},
	booktitle    = {2016 49th Hawaii International Conference on System Sciences (HICSS)},
	volume       = {},
	number       = {},
	pages        = {5447--5456},
	doi          = {10.1109/HICSS.2016.672},
	issn         = {1530-1605},
	abstract     = {The growth in popularity of Agile methods plus a dissatisfaction of Government agencies with traditional software development methods have stimulated the adoption of Agile Methods. The action research approach was used in this work to assess the implementation of a process for the Management of Agile Development Demands - whose original acronym in Portuguese is 'GeDDAS' - for a software factory in a Brazilian Federal Government Organisation. There, two-action research cycles were done with two pilot projects. The work of action research was effective and contributed to the successful outcome of the initiative. The implementation of agile approaches in a public organisation is slow and complex affair mainly due to the interferences made in the working environment of the companies involved and to a high staff turnover. In the end, the difficulties found and lessons learned in the process, as well as the results achieved are presented.},
	keywords     = {Action research, Outsourcing, Scrum}
}
@inproceedings{weir2019interventions,
	title        = {Interventions for Software Security: Creating a Lightweight Program of Assurance Techniques for Developers},
	author       = {Weir, Charles and Becker, Ingolf and Noble, James and Blair, Lynne and Sasse, Angela and Rashid, Awais},
	year         = 2019,
	month        = {May},
	booktitle    = {2019 IEEE/ACM 41st International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)},
	volume       = {},
	number       = {},
	pages        = {41--50},
	doi          = {10.1109/ICSE-SEIP.2019.00013},
	issn         = {},
	abstract     = {Though some software development teams are highly effective at delivering security, others either do not care or do not have access to security experts to teach them how. Unfortunately, these latter teams are still responsible for the security of the systems they build: systems that are ever more important to ever more people. We propose that a series of lightweight in-terventions, six hours of facilitated workshops delivered over three months, can improve a team's motivation to consider security and awareness of assurance techniques, changing its security culture even when no security experts are involved. The interventions were developed after an Appreciative Inquiry and Grounded Theory survey of security professionals to find out what approaches work best. They were then validated in fieldwork with a Participatory Action Research study that de-livered the workshops to three development organizations. This approach has the potential to be applied by many development teams, improving the security of software worldwide.},
	keywords     = {Developer centered security, software security, software developer, intervention, action research}
}
@article{penzenstadler2018sustainability,
	title        = {Sustainability analysis and ease of learning in artifact-based requirements engineering: The newest member of the family of studies (It’s a girl!)},
	author       = {Birgit Penzenstadler},
	year         = 2018,
	journal      = {Information and Software Technology},
	volume       = 95,
	pages        = {130--146},
	doi          = {https://doi.org/10.1016/j.infsof.2017.11.011},
	issn         = {0950-5849},
	url          = {https://www.sciencedirect.com/science/article/pii/S0950584917303488},
	keywords     = {Sustainability, Requirements engineering, Analysis, Empirical study, Family of studies, Evaluation research, Artifact orientation},
	abstract     = {Context: Artifact-based requirements engineering promises to deliver results of high quality while allowing for flexibility in the development process and the project settings. Tailored for analyzing sustainability, it can offer tangible insights on potential benefits and risks of a system under development. However, as of now there is still relatively little empirical evidence available that would prove this quality, flexibility, and insight potential. Previous studies, specifically on the first two characteristics, differ in their socio-economic contexts and make the findings hard to generalize. Objective: Our goal is to investigate the advantages and limitations in the application of artifact-based requirements engineering by new, inexperienced requirements engineers to extend our family of studies. In addition, the secondary goal is to evaluate the suitability of the sustainability analysis artifact for a sustainability analysis of the system planned for development. Method: We report on a new member in a family of studies with 20 participants for evaluating artifact models in a sustainability application context. We use a graduate block course as case. Our data collection is performed via survey at the end of the course, based on the same instrument used in previous studies, and extended with a new section on evaluating the suitability of a particular artifact for sustainability analysis. Results: Both from the quantitative and the qualitative feedback, the results indicate that the students have benefitted from the artifact-based approach to analyzing sustainability in requirements engineering. Usability, syntactic and semantic quality were all rated high and the rationales were positive, as was the feedback on the sustainability analysis artifact. Conclusion: The results contribute to a reliable database on artifact-oriented requirements engineering and strengthen our confidence in the general benefits of artifact-orientation. Relating the old and new data provides some more insight into the trajectory of the wider transfer of artifact-based requirements engineering into practice.}
}
@inproceedings{weir2018light,
	title        = {Light-Touch Interventions to Improve Software Development Security},
	author       = {Weir, Charles and Blair, Lynne and Becker, Ingolf and Sasse, Angela and Noble, James},
	year         = 2018,
	month        = {Sep.},
	booktitle    = {2018 IEEE Cybersecurity Development (SecDev)},
	volume       = {},
	number       = {},
	pages        = {85--93},
	doi          = {10.1109/SecDev.2018.00019},
	issn         = {},
	abstract     = {Many software developers still have little interest in software security. To change this, we need 'interventions' to development teams to motivate and help them towards security improvement. An intervention costing less than two days' effort from a facilitator plus half a day of team effort can significantly improve that team's software security. This case study describes how this approach was used with one commercial team, and identifies its impact using Participative Action Research. With suitable improvements, the approach has the potential to help many other development teams.},
	keywords     = {developer centered security, case study, software security, software developer, intervention, action research}
}
@inproceedings{beszédes2016academic,
	title        = {Academic and Industrial Software Testing Conferences: Survey and Synergies},
	author       = {Beszédes, Árpád and Vidács, László},
	year         = 2016,
	month        = {April},
	booktitle    = {2016 IEEE Ninth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)},
	volume       = {},
	number       = {},
	pages        = {240--249},
	doi          = {10.1109/ICSTW.2016.30},
	issn         = {},
	abstract     = {Just as with any other profession, an efficient way to exchange ideas and networking in software testing are conferences, workshops and similar events. This is true for both professional testers and researchers working in the testing area. However, these two groups usually look for different kinds of events: a tester likes to attend 'industrial' (sometimes called practitioner's or user) conferences, whereas a researcher is more likely interested in 'academic' (in other words scientific or research) conferences. Although there are notable exceptions, this separation is substantial, which hinders a successful academy-industry collaboration, and communication about the demand and supply of research in software testing. This paper reviews 101 conferences: two thirds are academic ones, the rest being industrial. Besides providing this reasonably comprehensive list, we analyze any visible synergies such as events that have a mixed Program Committee and offer a program with elements from both sides. We found only a handful of such events, but these can serve both as opportunities for attendees who wish to extend their perspectives and as models for organizers of future conferences.},
	keywords     = {software testing conferences, academia-industry collaboration, scientometrics}
}
@inproceedings{karim2016applying,
	title        = {Applying Data Analytics towards Optimized Issue Management: An Industrial Case Study},
	author       = {Karim, Muhammad Rezaul and Al Alam, S.M. Didar and Kabeer, Shaikh Jeeshan and Ruhe, Günther and Baluta, Basil and Mahmud, Shafquat},
	year         = 2016,
	month        = {May},
	booktitle    = {2016 IEEE/ACM 4th International Workshop on Conducting Empirical Studies in Industry (CESI)},
	volume       = {},
	number       = {},
	pages        = {7--13},
	doi          = {10.1109/CESI.2016.012},
	issn         = {},
	abstract     = {This document describes our experience of applying data analytics at Plexina, a leading IT company working in the healthcare domain. The main goal of the project was to identify factors currently affecting issue management and to make analytics based suggestions for optimizing the process. Various statistical and machine learning techniques were applied on a data set extracted from six releases of Plexina, containing more than 666 issues. Statistical techniques successfully identified the various factors that leads to estimation inaccuracy related to issues as well as identified the hidden relationships existing among various variables. The employed predictive analytic models was also successful to some extent, in predicting effort estimation related inaccuracy associated with the issues. The insights provided by the entire data analytics study can be of great help to product managers or the developers to make more informed decisions. In addition, the guidelines presented in this paper based on the lessons learnt can be applied to other data analytics and academia-industry collaboration project.},
	keywords     = {Issue management, Case study, Data analytics, Industry-academia collaboration}
}
@inproceedings{guillot2017case,
	title        = {Case Studies of Industry-Academia Research Collaborations for Software Development with Agile},
	author       = {Guillot, Isabelle and Paulmani, Geetha and Kumar, Vivekanandan and Fraser, Shawn N.},
	year         = 2017,
	booktitle    = {Collaboration and Technology},
	publisher    = {Springer International Publishing},
	address      = {Cham},
	pages        = {196--212},
	isbn         = {978-3-319-63874-4},
	editor       = {Gutwin, Carl and Ochoa, Sergio F. and Vassileva, Julita and Inoue, Tomoo},
	keywords     = {Agile, Scrum, Research collaboration, Distributed research team},
	abstract     = {Successful industry-academia research collaborations (IARCs) in the software development area can be challenging. The literature identifies best practices in IARCs along with process frameworks with the aim of ensuring successful outcomes for both industry and academia, namely: funding opportunities for universities, training and employment possibilities for students, new knowledge leading to innovative products for industry, and on-time delivery of software benefiting the economy, the institution, and the community. This paper shows ways in which core principles of the project management approach, Agile, and the Scrum framework have been applied and have led to the success of three IARCs. In addition to IARCs' common challenges, these case studies represented additional challenges as they were short-term software development projects accomplished by small geographically distributed teams. A report of the demographic, collaboration setting, and challenges, along with the lessons learned from the application of Agile and Scrum in these case studies will contribute to the body of knowledge in the field of IARCs. Using a qualitative and quantitative approach, five Agile/Scrum aspects for each project are assessed: product ownership, release, sprint, team, and technical health. Findings indicate several success factors directly linked to the application of the Agile principles and the Scrum framework. Specifically, early and frequent customer-centric software delivery, constant communications, responsiveness to change, and highly motivated individuals were key in terms of realizing the positive outcomes in spite of the obstacles inherent to IARCs. Cautions to this approach when applied in IARCs are reported along with solutions.}
}
@inproceedings{durbhakula2017wide,
	title        = {Wide Band Patch Antenna Structures for Cognitive Radio Applications},
	author       = {Durbhakula, Manikya Krishna Chaitanya and Nalam, Venkata Koteswara Rao},
	year         = 2017,
	month        = {Jan},
	booktitle    = {2017 IEEE 7th International Advance Computing Conference (IACC)},
	volume       = {},
	number       = {},
	pages        = {434--439},
	doi          = {10.1109/IACC.2017.0096},
	issn         = {2473-3571},
	abstract     = {The growing demand for the wireless connectivity has insisted a new communication technique to exploit the usage of spectrum in an efficient way. Many Techniques including Cognitive Radio (CR) technology provides the capability to share the spectrum and provides the high band width to the users by using dynamic access techniques. These techniques allow unlicensed secondary users to access the licensed spectrum without any disturbance. A special antenna is required in Cognitive Radio applications for spectrum sensing and communicating. Wide Band antennas are being considered as the most suitable structures for spectrum sensing applications and are perfectly suitable these environments. In this paper, an attempt is made to present the design of simple patch antenna structures by using circular, semi-circular, Semi-circular triangle shaped, semi-circular crown shaped antennas for achieving the wide band characteristics. These structures were analyzed theoretically and the simulation was done by using CST Microwave Studio Suite. All the structures were fabricated and analyzed in between 1-18 GHz frequency range on RT-Duroid substrate. It is found that these Structures achieve an enhanced impedance bandwidth over the frequency ranges other than Ultra Wide Band (UWB) range and up to Ku Band.},
	keywords     = {Cognitive Radio, Wide Band, Patch antenna, Ku Band, Spectrum Sensing, CST Microwave Studio}
}
@article{weir2020interventions,
	title        = {Interventions for long-term software security: Creating a lightweight program of assurance techniques for developers},
	author       = {Weir, Charles and Becker, Ingolf and Noble, James and Blair, Lynne and Sasse, M. Angela and Rashid, Awais},
	year         = 2020,
	journal      = {Software: Practice and Experience},
	volume       = 50,
	number       = 3,
	pages        = {275--298},
	doi          = {https://doi.org/10.1002/spe.2774},
	url          = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2774},
	keywords     = {action research, cybersecurity, developer-centered security, intervention, software developer, software security},
	eprint       = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.2774},
	abstract     = {Summary Though some software development teams are highly effective at delivering security, others either do not care or do not have access to security experts to teach them how. Unfortunately, these latter teams are still responsible for the security of the systems they build: systems that are ever more important to ever more people. We propose that a series of lightweight interventions, six hours of facilitated workshops delivered over three months, can improve a team's motivation to consider security and awareness of assurance techniques, changing its security culture even when no security experts are involved. The interventions were developed after an Appreciative Inquiry and Grounded Theory survey of security professionals to find out what approaches work best. We tested the interventions in a participatory action research field study where we delivered the workshops to three software development organizations and evaluated their effectiveness through interviews beforehand, immediately afterwards, and after twelve months. We found that the interventions can be effective with teams with limited or no security experience and that improvement is long-lasting. This approach and the learning points arising from the work here have the potential to be applied in many development teams, improving the security of software worldwide.}
}
@article{choraś2020measuring,
	title        = {Measuring and Improving Agile Processes in a Small-Size Software Development Company},
	author       = {Choraś, Michał and Springer, Tomasz and Kozik, Rafał and López, Lidia and Martínez-Fernández, Silverio and Ram, Prabhat and Rodriguez, Pilar and Franch, Xavier},
	year         = 2020,
	month        = {},
	journal      = {IEEE Access},
	volume       = 8,
	number       = {},
	pages        = {78452--78466},
	doi          = {10.1109/ACCESS.2020.2990117},
	issn         = {2169-3536},
	abstract     = {Context: Agile software development has become commonplace in software development companies due to the numerous benefits it provides. However, conducting Agile projects is demanding in Small and Medium Enterprises (SMEs), because projects start and end quickly, but still have to fulfil customers' quality requirements. Objective: This paper aims at reporting a practical experience on the use of metrics related to the software development process as a means supporting SMEs in the development of software following an Agile methodology. Method: We followed Action-Research principles in a Polish small-size software development company. We developed and executed a study protocol suited to the needs of the company, using a pilot case. Results: A catalogue of Agile development process metrics practically validated in the context of a small-size software development company, adopted by the company in their Agile projects. Conclusions: Practitioners may adopt these metrics in their Agile projects, especially if working in an SME, and customise them to their own needs and tools. Academics may use the findings as a baseline for new research work, including new empirical studies.},
	keywords     = {Agile software development, process metrics, software engineering, software quality, rapid software development, SMEs}
}
@article{condori-fernandez2020an,
	title        = {An Action Research for Improving the Sustainability Assessment Framework Instruments},
	author       = {Condori-Fernandez, Nelly and Lago, Patricia and Luaces, Miguel R. and Places, Ángeles S.},
	year         = 2020,
	journal      = {Sustainability},
	volume       = 12,
	number       = 4,
	doi          = {10.3390/su12041682},
	issn         = {2071-1050},
	url          = {https://www.mdpi.com/2071-1050/12/4/1682},
	keywords     = {sustainability assessment, sustainability–quality model, decision map, action research, software-intensive systems},
	abstract     = {In the last years, software engineering researchers have defined sustainability as a quality requirement of software, but not enough effort has been devoted to develop new methods/techniques to support the analysis and assessment of software sustainability. In this study, we present the Sustainability Assessment Framework (SAF) that consists of two instruments: the software sustainability&ndash;quality model, and the architectural decision map. Then, we use participatory and technical action research in close collaboration with the software industry to validate the SAF regarding its applicability in specific cases. The unit of analysis of our study is a family of software products (Geographic Information System- and Mobile-based Workforce Management Systems) that aim to address sustainability goals (e.g., efficient collection of dead animals to mitigate social and environmental sustainability risks). The results show that the sustainability&ndash;quality model integrated with the architectural decision maps can be used to identify sustainability&ndash;quality requirements as design concerns because most of its quality attributes (QAs) have been either addressed in the software project or acknowledged as relevant (i.e., creating awareness on the relevance of the multidimensional sustainability nature of certain QAs). Moreover, the action&ndash;research method has been helpful to enrich the sustainability&ndash;quality model, by identifying missing QAs (e.g., regulation compliance, data privacy). Finally, the architectural decision maps have been found as useful to guide software architects/designers in their decision-making process.}
}
@inproceedings{condorifernandez2019using,
	title        = {Using Participatory Technical-action-research to validate a Software Sustainability Model},
	author       = {{Condori Fernandez}, O.N. and Patricia Lago},
	year         = 2019,
	month        = {Jun},
	day          = 10,
	booktitle    = {ICT4S 2019 - Proceedings of the 6th International Conference on ICT for Sustainability. Lappeenranta, Finland, June 10-14, 2019.},
	publisher    = {CEUR-WS},
	pages        = {1--10},
	note         = {6th International Conference on ICT for Sustainability, ICT4S 2019 ; Conference date: 10-06-2019 Through 14-06-2019},
	abstract     = {[Context and Motivation] In the last years,software engineering researchers have contributed to defining the notion of sustainability-aware software as a quality requirement. [Question/problem] The field is,however, still missing instruments supporting the design and assessment of software sustainability.[Objective] This research aims at providing a validated Sustainability Assessment Framework (SAF) through along-term empirical study in close-collaboration with the software industry. [Methodology] By using the participatory technical action-research method, we validate the sustainability-quality model, one of the instruments of the SAF framework, by means of investigating its applicability in an industrial software project and detecting potential improvements.[Results] Our results confirm the effective applicability of our model as most of its quality attributes (QAs) have been either addressed in the software project or acknowledged as relevant. The action-research method was also very useful for enriching our model by identifying QAs missing in the model (e.g. regulation compliance, data privacy).[Contribution] The sustainability-quality model can be effectively used as an instrument for identifying sustainability-quality requirements, and creating awareness on the relevance of the multidimensional sustainability nature of certain quality attributes.},
	keywords     = {Action research, Quality requirements, Software-intensive systems, Sustainability-quality model},
	language     = {English},
	editor       = {Annika Wolff}
}
@inproceedings{m2020towards,
	title        = {Towards Automated Detection of Data Pipeline Faults},
	author       = {M, Aiswarya Raj and Bosch, Jan and Olsson, Helena Holmström and Wang, Tian J.},
	year         = 2020,
	month        = {Dec},
	booktitle    = {2020 27th Asia-Pacific Software Engineering Conference (APSEC)},
	volume       = {},
	number       = {},
	pages        = {346--355},
	doi          = {10.1109/APSEC51365.2020.00043},
	issn         = {2640-0715},
	abstract     = {Data pipelines play an important role throughout the data management process. It automates the steps ranging from data generation to data reception thereby reducing the human intervention. A failure or fault in a single step of a data pipeline has cascading effects that might result in hours of manual intervention and clean-up. Data pipeline failure due to faults at different stages of data pipelines is a common challenge that eventually leads to significant performance degradation of data-intensive systems. To ensure early detection of these faults and to increase the quality of the data products, continuous monitoring and fault detection mechanism should be included in the data pipeline. In this study, we have explored the need for incorporating automated fault detection mechanisms and mitigation strategies at different stages of the data pipeline. Further, we identified faults at different stages of the data pipeline and possible mitigation strategies that can be adopted for reducing the impact of data pipeline faults thereby improving the quality of data products. The idea of incorporating fault detection and mitigation strategies is validated by realizing a small part of the data pipeline using action research in the analytics team at a large software-intensive organization within the telecommunication domain.},
	keywords     = {component, data pipeline, fault detection, anomalies, mitigation, robustness, failure recovery, data quality, fault-tolerance}
}
@article{wohlin2021guiding,
	title        = {Guiding the selection of research methodology in industry–academia collaboration in software engineering},
	author       = {Claes Wohlin and Per Runeson},
	year         = 2021,
	journal      = {Information and Software Technology},
	volume       = 140,
	pages        = 106678,
	doi          = {https://doi.org/10.1016/j.infsof.2021.106678},
	issn         = {0950-5849},
	url          = {https://www.sciencedirect.com/science/article/pii/S0950584921001361},
	keywords     = {Research methodology, Selecting research methodology, Design Science, Action Research, Technology Transfer Model, Industry–academia collaboration},
	abstract     = {Background: The literature concerning research methodologies and methods has increased in software engineering in the last decade. However, there is limited guidance on selecting an appropriate research methodology for a given research study or project. Objective: Based on a selection of research methodologies suitable for software engineering research in collaboration between industry and academia, we present, discuss and compare the methodologies aiming to provide guidance on which research methodology to choose in a given situation to ensure successful industry–academia collaboration in research. Method: Three research methodologies were chosen for two main reasons. Design Science and Action Research were selected for their usage in software engineering. We also chose a model emanating from software engineering, i.e., the Technology Transfer Model. An overview of each methodology is provided. It is followed by a discussion and an illustration concerning their use in industry–academia collaborative research. The three methodologies are then compared using a set of criteria as a basis for our guidance. Results: The discussion and comparison of the three research methodologies revealed general similarities and distinct differences. All three research methodologies are easily mapped to the general research process describe–solve–practice, while the main driver behind the formulation of the research methodologies is different. Thus, we guide in selecting a research methodology given the primary research objective for a given research study or project in collaboration between industry and academia. Conclusions: We observe that the three research methodologies have different main objectives and differ in some characteristics, although still having a lot in common. We conclude that it is vital to make an informed decision concerning which research methodology to use. The presentation and comparison aim to guide selecting an appropriate research methodology when conducting research in collaboration between industry and academia.}
}
@article{garousi2021model,
	title        = {Model-based testing in practice: An experience report from the web applications domain},
	author       = {Garousi, Vahid and Kele{\c{s}}, Alper Bu{\u{g}}ra and Balaman, Yunus and G{\"u}ler, Zeynep {\"O}zdemir and Arcuri, Andrea},
	year         = 2021,
	journal      = {Journal of Systems and Software},
	publisher    = {Elsevier},
	volume       = 180,
	pages        = 111032,
	keywords     = {Software testing, Test automation, Model-based testing, Web applications, Experience report, Applied research report},
	abstract     = {In the context of a software testing company, we have deployed the model-based testing (MBT) approach to take the company’s test automation practices to higher levels of maturity and capability. We have chosen, from a set of open-source/commercial MBT tools, an open-source tool named GraphWalker, and have pragmatically used MBT for end-to-end test automation of several large web and mobile applications under test. The MBT approach has provided, so far in our project, various tangible and intangible benefits in terms of improved test coverage (number of paths tested), improved test-design practices, and also improved real-fault detection effectiveness. The goal of this experience report (applied research report), done based on “action research”, is to share our experience of applying and evaluating MBT as a software technology (technique and tool) in a real industrial setting. We aim at contributing to the body of empirical evidence in industrial application of MBT by sharing our industry-academia project on applying MBT in practice, the insights that we have gained, and the challenges and questions that we have faced and tackled so far. We discuss an overview of the industrial setting, provide motivation, explain the events leading to the outcomes, discuss the challenges faced, summarize the outcomes, and conclude with lessons learned, take-away messages, and practical advices based on the described experience. By learning from the best practices in this paper, other test engineers could conduct more mature MBT in their test projects.}
}
@inproceedings{lwakatare2021on,
	title        = {On the Experiences of Adopting Automated Data Validation in an Industrial Machine Learning Project},
	author       = {Lwakatare, Lucy Ellen and Rånge, Ellinor and Crnkovic, Ivica and Bosch, Jan},
	year         = 2021,
	month        = {May},
	booktitle    = {2021 IEEE/ACM 43rd International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP)},
	volume       = {},
	number       = {},
	pages        = {248--257},
	doi          = {10.1109/ICSE-SEIP52600.2021.00034},
	issn         = {},
	abstract     = {Background: Data errors are a common challenge in machine learning (ML) projects and generally cause significant performance degradation in ML-enabled software systems. To ensure early detection of erroneous data and avoid training MLmodels using bad data, research and industrial practice suggest incorporating a data validation process and tool in the ML system development process. Aim: The study investigates the adoption of a data validation process and tool in industrial ML projects. The data validation process demands significant engineering resources for tool development and maintenance. Thus, it is important to identify the best practices for their adoption especially by development teams that are in the early phases of deploying ML-enabled software systems. Method: Action research was conducted at a large-software intensive organization in telecommunications, specifically within the analytics R&D organization for an ML use case of classifying faults from returned hardware telecommunication devices. Results: Based on the evaluation results and learning from our action research, we identified three best practices, three benefits, and two barriers to adopting the data validation process and tool in ML projects. We also propose a data validation framework(DVF) for systematizing the adoption of a data validation process. Conclusions: The results show that adopting a data validation process and tool in ML projects is an effective approach to testing ML-enabled software systems. It requires having an overview of the level of data (feature, dataset, cross-dataset, data stream) at which certain data quality tests can be applied.},
	keywords     = {Machine learning, Software engineering, Data quality, Data errors, Data validation}
}
@article{ebel2021automotive,
	title        = {Automotive UX design and data-driven development: Narrowing the gap to support practitioners},
	author       = {Patrick Ebel and Julia Orlovska and Sebastian Hünemeyer and Casper Wickman and Andreas Vogelsang and Rikard Söderberg},
	year         = 2021,
	journal      = {Transportation Research Interdisciplinary Perspectives},
	volume       = 11,
	pages        = 100455,
	doi          = {https://doi.org/10.1016/j.trip.2021.100455},
	issn         = {2590-1982},
	url          = {https://www.sciencedirect.com/science/article/pii/S2590198221001603},
	abstract     = {The development and evaluation of In-Vehicle Information Systems (IVISs) is strongly based on insights from qualitative studies conducted in artificial contexts (e.g., driving simulators or lab experiments). However, the growing complexity of the systems and the uncertainty about the context in which they are used, create a need to augment qualitative data with quantitative data, collected during real-world driving. In contrast to many digital companies that are already successfully using data-driven methods, Original Equipment Manufacturers (OEMs) are not yet succeeding in releasing the potentials such methods offer. We aim to understand what prevents automotive OEMs from applying data-driven methods, what needs practitioners formulate, and how collecting and analyzing usage data from vehicles can enhance UX activities. We adopted a Multiphase Mixed Methods approach comprising two interview studies with more than 15 UX practitioners and two action research studies conducted with two different OEMs. From the four studies, we synthesize the needs of UX designers, extract limitations within the domain that hinder the application of data-driven methods, elaborate on unleveraged potentials, and formulate recommendations to improve the usage of vehicle data. We conclude that, in addition to modernizing the legal, technical, and organizational infrastructure, UX and Data Science must be brought closer together by reducing silo mentality and increasing interdisciplinary collaboration. New tools and methods need to be developed and UX experts must be empowered to make data-based evidence an integral part of the UX design process.}
}
@phdthesis{irshad2021realizing,
	title        = {Realizing the systematic reuse of automated acceptance tests in practice},
	author       = {Irshad, Mohsin},
	year         = 2021,
	series       = {Blekinge Institute of Technology Doctoral Dissertation Series},
	isbn         = {978-91-7295-425-0},
	url          = {http://urn.kb.se/resolve?urn=urn:nbn:se:bth-21999},
	place        = {Karlskrona},
	abstract	 = {Context: Automated acceptance testing has become a relevant practice of agile software development (e.g., Extreme Programming). Automated acceptance tests (AATs) are closely tied to requirements and provide a mechanism for continuous validation of requirements as system-level tests. Studies have shown that these tests are costly to develop, maintain, and reuse.Objectives: This thesis examines and supports the systematic reuse of automated acceptance tests by providing approaches to search, identity, adapt reusable test cases while considering the reuse costs. Additionally, the maintainability and usage of automated acceptance tests in largescale software projects are studied.Method: We used various research methods to investigate development, reuse, and maintaining the automated acceptance tests. Workshops and interviews of practitioners were used to identify the benefits and challenges of automated acceptance tests. Next, method engineering was used to construct a systematic reuse process for automated acceptance tests. Qualitative feedback collected using a survey, and industrial demonstration examined the reuse process’s performance expectancy, effort expectancy, and necessary facilitating conditions. Two systematic literature reviews are used to identify techniques to adapt tests for future reuse opportunities and calculate the reuse costs of automated acceptance tests. Later, we developed and evaluated an approach for refactoring behavior-driven development-based automated acceptance tests using action research.Results: A cost-aware systematic reuse process was constructed to support the reuse of automated acceptance tests containing eleven activities. For each activity, guidelines on expected input, expected output, the actors performing the activity, and techniques (automated using scripts) are suggested and evaluated. The techniques involve approaches to support development for reuse and methods to calculate the costs of reusing automated acceptance tests. The industrial evaluation of the reuse process and the techniques showed its usefulness and relevance for the industry. Furthermore, seven challenges (i.e., the scale of the software projects, ownership, lack of competence, cost benefits, specification of behaviors in large-scale projects, difficulty writing system-level test-cases, and versioning control of behaviors) and five benefits (i.e., understanding of a business aspect of requirements, improved quality of requirements, a guide to system-level use-cases, reuse of artifacts in large-scale projects, and help for test organization.) of using automated acceptance tests in large-scale projects are identified with software practitioners’ help. Later, we proposed a semiautomated four-step approach for pre-processing, measuring, ranking, and identifying refactoring candidates. The approach and the two proposed measures were successfully evaluated using two industrial projects. It was noted that similarity measures could support the maintenance of the specification base using refactoring.Conclusions: The studies show that automated acceptance tests are reusable and can be refactored using our proposed approach. The evaluation shows that the results apply to the software industry in the evaluated context. However, further work is required to evaluate the reuse process in different contexts.},
	school       = {Blekinge Tekniska Högskola},
	collection   = {Blekinge Institute of Technology Doctoral Dissertation Series}
}
@inproceedings{barbosamonteiro2021the,
	title        = {The Diversity of Gamification Evaluation in the Software Engineering Education and Industry: Trends, Comparisons and Gaps},
	author       = {Barbosa Monteiro, Rodrigo Henrique and de Almeida Souza, Maurício Ronny and Bezerra Oliveira, Sandro Ronaldo and dos Santos Portela, Carlos and de Cristo Lobato, Cesar Elias},
	year         = 2021,
	month        = {May},
	booktitle    = {2021 IEEE/ACM 43rd International Conference on Software Engineering: Software Engineering Education and Training (ICSE-SEET)},
	volume       = {},
	number       = {},
	pages        = {154--164},
	doi          = {10.1109/ICSE-SEET52601.2021.00025},
	issn         = {},
	abstract     = {Context: gamification has been used to motivate and engage participants in software engineering education and practice activities. Problem: There is a significant demand for empirical studies for the understanding of the impacts and efficacy of gamification. However, the lack of standard procedures and models for the evaluation of gamification is a challenge for the design, comparison, and report of results related to the assessment of gamification approaches and its effects. Goal: The goal of this study is to identify models and strategies for the evaluation of gamification reported in the literature. Method: To achieve this goal, we conducted a systematic mapping study to investigate strategies for the evaluation of gamification in the context of software engineering. We selected 100 primary studies on gamification in software engineering (from 2011 to 2020). We categorized the studies regarding the presence of evaluation procedures or models for the evaluation of gamification, the purpose of the evaluation, the criteria used, the type of data, instruments, and procedures for data analysis. Results: Our results show that 64 studies report procedures for the evaluation of gamification. However, only three studies actually propose evaluation models for gamification. We observed that the evaluation of gamification focuses on two aspects: the evaluation of the gamification strategy itself, related to the user experience and perceptions; and the evaluation of the outcomes and effects of gamification on its users and context. The most recurring criteria for the evaluation are "engagement", "performance", "satisfaction", and "motivation". Finally, the evaluation of gamification requires a mix of subjective and objective inputs, and qualitative and quantitative data analysis approaches. Depending of the focus of the evaluation (the strategy or the outcomes), there is a predominance of a type of data and analysis.},
	keywords     = {gamification, systematic mapping, evaluation, software engineering, education}
}
@inbook{burova2021toward,
	title        = {Toward Efficient Academia-Industry Collaboration: A Case Study of Joint VR System Development},
	author       = {Burova, Alisa and Heinonen, Hanna and Becerril Palma, Paulina and Keskinen, Tuuli and Hakulinen, Jaakko and Opas, Viveka and M\"{a}kel\"{a}, John and Ronkainen, Kimmo and Siltanen, Sanni and Raisamo, Roope and Turunen, Markku},
	year         = 2021,
	booktitle    = {Academic Mindtrek 2021},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	pages        = {176–185},
	isbn         = 9781450385145,
	url          = {https://doi.org/10.1145/3464327.3464367},
	keywords     = {Collaborative Virtual Environment, Virtual Reality, Industrial Maintenance, Industry-Academia Collaboration, Academia-Industry Collaboration},
	abstract     = {Collaborative academia-industry development and evaluation of virtual reality (VR) systems is a mutually beneficial opportunity to investigate VR technology in a real context and conduct user studies with target users. However, such collaboration is rarely performed due to variations in project pace and work methods. In this article, we introduce the process of action research on joint design, development, and evaluation of a collaborative VR system to address industrial needs. The paper further presents employees’ subjective opinions and perceived value of industrial VR applications and reflects on their involvement throughout the process. The article concludes with a process-oriented framework for remote academia-industry collaboration, supported with practical suggestions on how to support this collaboration. Our experiences reveal the methods and advantages of remote collaboration in all phases of the process and signify the efficiency of the remote framework for academia-industry collaboration, especially relevant in the light of the COVID-19 pandemia..},
	numpages     = 10
}
@inproceedings{martins2021from,
	title        = {From Blackboard to the Office: A Look Into How Practitioners Perceive Software Testing Education},
	author       = {Martins, Luana and Brito, Vinicius and Feitosa, Daniela and Rocha, Larissa and Costa, Heitor and Machado, Ivan},
	year         = 2021,
	booktitle    = {Evaluation and Assessment in Software Engineering},
	location     = {Trondheim, Norway},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	series       = {EASE 2021},
	pages        = {211–220},
	doi          = {10.1145/3463274.3463338},
	isbn         = 9781450390538,
	url          = {https://doi.org/10.1145/3463274.3463338},
	abstract     = {The teaching-learning process may require specific pedagogical approaches to establish a relationship with industry practices. Recently, some studies investigated the educators’ perspectives and the undergraduate courses curriculum to identify potential weaknesses and solutions for the software testing teaching process. However, it is still unclear how the practitioners evaluate the acquisition of knowledge about software testing in undergraduate courses. This study carried out an expert survey with 68 newly graduated practitioners to determine what the industry expects from them and what they learned in academia. The yielded results indicated that those practitioners learned at a similar rate as others with a long industry experience. Also, they studied less than half of the 35 software testing topics collected in the survey and took industry-backed extracurricular courses to complement their learning. Additionally, our findings point out a set of implications for future research, as the respondents’ learning difficulties (e.g., lack of learning sources) and the gap between academic education and industry expectations (e.g., certifications).},
	numpages     = 10,
	keywords     = {Testing in Industry, Practitioners’ Perception, Testing in Academia}
}
@phdthesis{bengtsson2021factors,
	title        = {Factors for Adopting and Implementing Accessibility as a Cornerstone in Software Development Processes in Organizations},
	author       = {Bengtsson, Milo and Pamp, Jesper},
	year         = 2021,
	url          = {http://urn.kb.se/resolve?urn=urn:nbn:se:mau:diva-43004},
	abstract	 = {Due to the increasing prevalence of laws, standards, and ethical discussions about web accessibility, developing websites and apps that are usable to everyone—regardless of disability and impairment—is more important than ever. In spite of this, most of the web is still inaccessible and accessibility is commonly treated as an afterthought. The aim of this thesis is to investigate how to implement web accessibility as a cornerstone of software development processes, and more specifically what motivates accessibility adoption and how to implement it successfully.The main part of the research consists of an extensive analysis of the literature to identify common themes. Although legislation and financial concerns play a role in why organizations adopt accessibility, the most frequently cited factors are social and ethical aspects as well as reaching a wider audience. The success of accessibility implementation is largely dependent on how knowledge is created, maintained, and disseminated in organizations. Prioritizing it and integrating it as much as any other basic requirement is also a key to success. Moreover, WCAG 2.1 Level AA is the recommended accessibility standard and compliance level, as informed by a law review and insights from literature. In addition, semi-structured interviews and a workshop were conducted with participants across three projects of a Swedish IT company with the aim of applying the findings in a real-life context and bringing about change in the organization.Final suggestions were based on the thematic analysis, and adapted to the case company through the insights from interviews and the workshop, as well as process documentation and corporate policies. Although not generalizable to all organizations, the suggestions provide understanding of enterprises sharing the case company’s characteristics. Furthermore, the thematic analysis and law review have relevance for all types of private organizations.}
}
@inproceedings{kaijanaho2017concept,
	title        = {Concept Analysis in Programming Language Research: Done Well It is All Right},
	author       = {Kaijanaho, Antti-Juhani},
	year         = 2017,
	booktitle    = {Proceedings of the 2017 ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software},
	location     = {Vancouver, BC, Canada},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	series       = {Onward! 2017},
	pages        = {246–259},
	doi          = {10.1145/3133850.3133868},
	isbn         = 9781450355308,
	url          = {https://doi.org/10.1145/3133850.3133868},
	abstract     = {Programming language research is becoming method conscious. Rigorous mathematical or empirical evaluation is often demanded, which is a good thing. However, I argue in this essay that concept analysis is a legitimate research approach in programming languages, with important limitations. It can be used to sharpen vague concepts, and to expose distinctions that have previously been overlooked, but it does not demonstrate the superiority of one language design over another. Arguments and counter-arguments are essential to successful concept analysis, and such thoughtful conversations should be published more.},
	numpages     = 14,
	keywords     = {argumentation, research methodology, concept analysis, philosophy, programming language research, non-empirical research}
}
@inproceedings{clouter2017exploring,
	title        = {Exploring the Interconnectivity of Risk Management, the Human Element, and Action Research: A Canadian Arctic Perspective},
	author       = {Clouter, Elizabeth K},
	year         = 2017,
	booktitle    = {Global perspectives in MET: Towards Sustainable, Green and Integrated Maritime Transport},
	pages        = {411--420},
	abstract     = {In recent decades, the shipping industry, described by the International Maritime Organization (IMO) [1] as “the most international of all the world’s great industries and one of the most dangerous” (p. 401) has undergone significant change and momentous growth, improved training, and substantial regulatory oversight. Extensive risk management (RM) protocol notwithstanding, accidents still occur [2, 3], with 75% deriving from human factors [4, 5]. In a fundamentally people-based industry, RM and the Human Element, and therefore potential Human Error (HE), are intrinsically linked. Maritime RM is highly regulated with the ISM Code, MARPOL, SOLAS, and the IMO’s Formal Safety Assessment (FSA) process all examples of the regulations and guidelines designed to proactively offset risk and prevent tragedy. Nevertheless, traditional maritime sector RM protocol relies heavily upon historical data which, in addition to the inherent undesirability of dependency, involves multiple other weaknesses. HE has been likened to a breakdown in technical reliability [7] where humans, in their susceptibility to inappropriate response in the face of disturbances to normal operations, act essentially as risk factors [6]. Recent perspectives on safety increasingly consider the Human Element as only one of a “network of errors” in a safety causation chain [7, p. 14]. In the Arctic, where unknowns are extensive and experience navigating them is not, this distinction is especially noteworthy. Strengthened and deeper connection with the Human Element, in conjunction with databank reinforcement and population, therefore appear fundamental to safety improvement efforts [6]. With particular focus on the Arctic, this paper explores whether Action Research is an appropriate methodology to (i) improve facilitation of tasks identified as necessary to mitigating the insufficiency of existing historical databases and (ii) contribute to safety improvement efforts and augment current RM protocol by bringing together the knowledge base of maritime stakeholders as representatives of the Human Element. 18th Annual General Assembly 2017 International Association of Maritime Universities (IAMU)}
}
@book{munappy2021data,
	title        = {Data management and Data Pipelines: An empirical investigation in the embedded systems domain},
	author       = {Munappy, Aiswarya Raj},
	year         = 2021,
	publisher    = {Chalmers Tekniska Hogskola (Sweden)},
	abstract     = {Context: Companies are increasingly collecting data from all possible sources to extract insights that help in data-driven decision-making. Increased data volume, variety, and velocity and the impact of poor quality data on the development of data products are leading companies to look for an improved data management approach that can accelerate the development of high-quality data products. Further, AI is being applied in a growing number of fields, and thus it is evolving as a horizontal technology. Consequently, AI components are increasingly been integrated into embedded systems along with electronics and software. We refer to these systems as AI-enhanced embedded systems. Given the strong dependence of AI on data, this expansion also creates a new space for applying data management techniques.  Objective: The overall goal of this thesis is to empirically identify the data management challenges encountered during the development and maintenance of AI-enhanced embedded systems, propose an improved data management approach and empirically validate the proposed approach. Method: To achieve the goal, we conducted this research in close collaboration with Software Center companies using a combination of different empirical research methods: case studies, literature reviews, and action research. Results and conclusions: This research provides five main results. First, it identifies key data management challenges specific to Deep Learning models developed at embedded system companies. Second, it examines the practices such as DataOps and data pipelines that help to address data management challenges. We observed that DataOps is the best data management practice that improves the data quality and reduces the time tdevelop data products. The data pipeline is the critical component of DataOps that manages the data life cycle activities. The study also provides the potential faults at each step of the data pipeline and the corresponding mitigation strategies. Finally, the data pipeline model is realized in a small piece of data pipeline and calculated the percentage of saved data dumps through the implementation. Future work: As future work, we plan to realize the conceptual data pipeline model so that companies can build customized robust data pipelines. We also plan to analyze the impact and value of data pipelines in cross-domain AI systems and data applications. We also plan to develop AI-based fault detection and mitigation system suitable for data pipelines.},
	keywords     = {data management, empirical investigation, artificial intelligence, data pipelines, embedded systems, software engineering, machine learning}
}
@inproceedings{soares2017inventorying,
	title        = {Inventorying Systems: An Action Research.},
	author       = {Soares, Vanessa De Andrade and da Costa Figueiredo, Rejane Maria and Venson, Elaine and de Ara{\'u}jo, La{\'\i}s and Queiroz, Rafael},
	year         = 2017,
	booktitle    = {ICEIS (1)},
	pages        = {296--303},
	keywords     = {Inventory, Maintenance, Documentation, Legacy Systems, Action Research},
	abstract     = {Maintainability, characterized by ease of understanding, is strongly related to the availability of correct and update information about th e system and the ease of maintenance staff in understanding it. The Brazilian public administration has many legacy systems in maintenance whose documentation is non-existent or incomplete. The main purpose of this work was to identify the inventorying attributes that have to be recorded to support systems maintenance. The me thodology applied was action research whose cycles allowed identifying the attributes required by each one of the stakeholders, civil servants and providers to inventory the systems, as well as how to register and access their attributes. As a result, the set of attributes produced by the interaction between researchers and stakeholders was considered essential to the infrastructure and systems areas, managers, and providers.}
}
@article{sousa2021towards,
	title        = {Towards Lean Service sustainability: an action research approach},
	author       = {Sousa, Maria Henriqueta Cola{\c{c}}o Tavares de Almeida Oliveira},
	year         = 2021,
	url          = {http://hdl.handle.net/10362/124483},
	keywords     = {Lean Service, Lean sustainability, Social and technical dimensions, Action research},
	abstract     = {This thesis argues that the sustainability of Lean philosophy adoption depends on following a systemic and holistic thinking, combining Lean technical and social dimensions. Based on the constructivism research paradigm, the study was supported on the Action Research methodology (AR), particularly the Canonical Action Research method (CAR). Acknowledging on lessons learned from two research cycles, the evolving approach to applying and sustaining Lean in a financial services provider was performed. The result was positive and the innovative approach followed was coined as Lean Service System Approach (LSSA). It combines the standard roadmap in Lean Leap model with Lean Service Critical Success Factors, covering the four perspectives of organisation, people, process and customer, within continuous improvement cycles. This approach was able to anchor Lean in the organisation over time and answered the research question of how to sustain Lean thinking in service organisations. Future research perspectives were also identified to foster further contributions to the Lean community, practitioners and academia.}
}
@article{santos2020an,
	title        = {An Action Research for User Requirements Processes in a Brazilian Public Institution},
	author       = {Santos, Luís E. S. and Soares, Michel S.},
	year         = 2020,
	month        = {Apr.},
	journal      = {iSys - Brazilian Journal of Information Systems},
	volume       = 13,
	number       = 2,
	pages        = {60–109},
	doi          = {10.5753/isys.2020.760},
	url          = {https://sol.sbc.org.br/journals/index.php/isys/article/view/760},
	keywords     = {Action Research, Public Sector, Requirements Documentation, Requirements Engineering, SysML, User Requirements},
	abstract     = {Requirements Engineering stands out as a key phase within Software Engineering for establishing a strict and common vision between the client and the project team on software requirements. This study was carried out using the action research methodology in a public institution, with the goal of proposing and applying a user requirements elicitation and documentation process. In the process, a template is used for documenting requirements using SysML (Systems Modeling Language). Both qualitative and quantitative evaluations were carried out to evaluate the effectiveness of the process. Results suggest that the intervention achieved positive results, including evidence of improvements in user requirements elicitation and documentation.}
}
@article{vollenberg2021die,
	title        = {Die Entwicklungsbeschleunigung von Robotic Process Automation L{\"o}sungen -- Fallstudie einer deutschen Gesundheitsbeh{\"o}rde},
	author       = {Vollenberg, Carolin and Koch, Julian and Trampler, Michael and Bade, Friederike-Maria and Coners, Andr{\'e} and Plattfaut, Ralf},
	year         = 2021,
	month        = {Oct},
	day          = {01},
	journal      = {HMD Praxis der Wirtschaftsinformatik},
	volume       = 58,
	number       = 5,
	pages        = {1244--1263},
	doi          = {10.1365/s40702-021-00764-6},
	issn         = {2198-2775},
	url          = {https://doi.org/10.1365/s40702-021-00764-6},
	abstract     = {Krisen erfordern flexibles Handeln und schnelle Anpassungen sowohl von Menschen als auch von {\"o}ffentlichen Institutionen. Die {\"o}ffentliche Hand und insbesondere die deutschen Gesundheitsbeh{\"o}rden sind w{\"a}hrend der Covid-19-Pandemie, beginnend im M{\"a}rz 2020, massiv herausgefordert. Die Bew{\"a}ltigung des teilweise exponentiell wachsenden Prozessvolumens durch kurzfristige Infektionsereignisse muss in k{\"u}rzester Zeit fachgerecht erfolgen und unterliegt einer permanenten Reaktion und Anpassung an sich {\"a}ndernde Rahmenbedingungen. Bestehende Strukturen und ineffiziente Prozesse erschweren diese notwendige Skalierung der Bearbeitung zunehmend. In diesem Beitrag werden mittels Aktionsforschung Ans{\"a}tze f{\"u}r eine beschleunigte und flexible Entwicklung von Robotic Process Automation (RPA)-L{\"o}sungen zur Automatisierung bestehender Verwaltungsprozesse innerhalb einer betroffenen Gesundheitsbeh{\"o}rde in Deutschland untersucht. Als Ergebnis wurden Ans{\"a}tze f{\"u}r eine schnellere und weniger komplexe Entwicklung von RPA-L{\"o}sungen in einer sehr schnell skalierenden und gleichzeitig stark heterogenen IT-Systemlandschaft erarbeitet und bewertet.}
}
@inproceedings{choma2015towards,
	title        = {Towards an Approach Matching CMD and DSR to Improve the Academia-Industry Software Development Partnership: A Case of Agile and UX Integration},
	author       = {Choma, Joelma and Zaina, Luciana A.M. and Silva, Tiago Silva Da},
	year         = 2015,
	month        = {Sep.},
	booktitle    = {2015 29th Brazilian Symposium on Software Engineering},
	volume       = {},
	number       = {},
	pages        = {51--60},
	doi          = {10.1109/SBES.2015.18},
	issn         = {},
	abstract     = {The interest on promoting the Academia-Industry partnership in the software development field has been increasingly encouraged by means of research approaches that support the cooperation between researchers and practitioners. The main focus is driven by the collaborative work where the scientific research work meets the real needs of the Industry. Aiming to contribute to this effort we present an approach called Soft Coder (Software Cooperative Design Research) that combines CMD (Cooperative Method Development), a method of Action Re-search, to concepts of DSR (Design Science Research). Our proposal supports the conduction of projects integrating the view-points of Industry and Academia, aiming to add User experience (UX) methods into agile practices. We carried out two studies applying the Soft Coder approach in a software Industry, work in close cooperation with UX and SCRUM teams for building and evaluating artifacts based on UX methods to support practical activities of both teams.},
	keywords     = {Action Research, Design Science, Software Engineering, SCRUM, HCI, Interaction Design, User Experience}
}
@article{mishra2021business,
	title        = {Business value appropriation roadmap for artificial intelligence},
	author       = {Mishra, Arindra Nath and Pani, Ashis Kumar},
	year         = 2021,
	month        = {Jan},
	day          = {01},
	journal      = {VINE Journal of Information and Knowledge Management Systems},
	publisher    = {Emerald Publishing Limited},
	volume       = 51,
	number       = 3,
	pages        = {353--368},
	doi          = {10.1108/VJIKMS-07-2019-0107},
	issn         = {2059-5891},
	url          = {https://doi.org/10.1108/VJIKMS-07-2019-0107},
	keywords     = {Ambidexterity, Business transformation, Organizational learning, New product development, Artificial intelligence, E-business strategy},
	abstract     = {Purpose Artificial intelligence (AI) is deemed to have a significant impact as a value driver for the firms and help them get an operational and competitive advantage. However, there exists a lack of understanding of how to appropriate value from this nascent technology. This paper aims to discuss the approaches toward knowledge and innovation strategies to fill this gap. Design/methodology/approach The discussion presents a review of the extant strategy and information systems literature to develop a strategy for organizational learning and value appropriation strategy for AI. A roadmap is drawn from ambidexterity and organizational learning theories. Findings This study builds the link between learning and ambidexterity to propose paths for exploration and exploitation of AI. The study presents an ambidextrous approach toward innovation concerning AI and highlights the importance of developing as well as reusing the resources. Research limitations/implications This study integrates over three decades of strategy and information systems literature to answer questions about value creation from AI. The study extends the ambidexterity literature with contemporary. Practical implications This study could help practitioners in making sense of AI and making use of AI. The roadmap could be used as a guide for the strategy development process. Originality/value This study analyzes a time-tested theoretical framework and integrates it with futuristic technology in a way that could reduce the gap between intent and action. It aims to simplify the organizational learning and competency development for an uncertain, confusing and new technology.}
}
@article{brings2018approaches,
	title        = {Approaches, success factors, and barriers for technology transfer in software engineering—Results of a systematic literature review},
	author       = {Brings, Jennifer and Daun, Marian and Brinckmann, Sarah and Keller, Kevin and Weyer, Thorsten},
	year         = 2018,
	journal      = {Journal of Software: Evolution and Process},
	volume       = 30,
	number       = 11,
	pages        = {e1981},
	doi          = {https://doi.org/10.1002/smr.1981},
	url          = {https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.1981},
	note         = {e1981 JSME-17-0169.R2},
	keywords     = {software engineering, systematic literature review, technology transfer},
	eprint       = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/smr.1981},
	keywords     = {software engineering, systematic literature review, technology transfer},
	abstract     = {Abstract Introduction Technology transfer aims at supporting the transfer of results from software engineering research from academia to industrial application. Objective This paper reports on the current state of technology transfer in software engineering. Method We conducted a systematic literature review, in which we investigated 3070 papers. We identified in total 70 relevant papers, which were subject of a detailed analysis. Results Many different approaches are proposed to foster technology transfer in software engineering. The majority of these approaches suggest direct collaboration between industry and academia or teaching new technologies in industrial training or university education. In addition, a considerable number of experience reports on technology transfer exist. Hence, a multitude of best practices, success stories, and lessons learned is reported. Among others, empirical evidence, maturity, and adaptability of the technology seem important preconditions for successful transfer, while social and organizational factors seem important barriers to successful technology transfer. Conclusion Our findings can aid software engineering researchers in determining how best to support the transfer of their research results into practice. Furthermore, analysis of the literature also revealed that no reports exist on the combination of various technology transfer approaches, which could increase advantages of existing approaches while reducing their disadvantages.}
}
@article{lee2020start,
	title        = {Start With Problems or Solutions? Medical Device Design in Industry and Academia},
	author       = {Lee, Jin Woo and Daly, Shanna R. and Huang-Saad, Aileen and Seifert, Colleen M.},
	year         = 2020,
	month        = {},
	journal      = {IEEE Access},
	volume       = 8,
	number       = {},
	pages        = {208623--208642},
	doi          = {10.1109/ACCESS.2020.3035966},
	issn         = {2169-3536},
	abstract     = {Design processes can be influenced by their practice environments. Although design processes of industry engineers have been examined in multiple research studies, few studies have investigated design processes of academic engineers. As academia and industry have different sociocultural norms and constraints, their design processes likely also differ. To examine this question, we conducted semi-structured interviews with both academic and industry engineers who had successfully designed medical devices. Our qualitative findings revealed that engineers in industry described their design process as a sequence with problem definition, solution exploration, detail design, evaluation, and communication. Academic engineers, in contrast, described their design process as beginning with a discovered solution, then searching for application problems, evaluating compatibility between problems and solution, and finally, communicating their findings through publications. Understanding differences in design processes of academic and industry engineers can facilitate knowledge sharing and promote collaboration between academia and industry. The findings also highlight the impact of sociocultural norms on practices, even in disciplines with highly trained and clearly defined processes.},
	keywords     = {Design processes, design practice , design problems, innovation}
}
@article{leal2018empirical,
	title        = {Empirical study of the evaluation of perspectives to knowledge capitalisation in Brazilian software industry},
	author       = {Leal, Gislaine Camila Lapasini and Huzita, Elisa Hatsue Moriya and Stadzisz, Paulo Cezar},
	year         = 2018,
	journal      = {IET Software},
	publisher    = {IET},
	volume       = 12,
	number       = 2,
	pages        = {120--128},
	abstract     = {Knowledge capitalisation directs the activities of use, exploitation and reuse of knowledge for performing new tasks, including technical and management aspects. Specifically, considering software development, knowledge capitalisation demands an analysis that considers four complementary and interdependent perspectives on knowledge: value, security, utility and status. These perspectives focus on different facets according to which knowledge can be analysed, in addition to provide a foundation for a better awareness on knowledge and the necessary treatment. This study presents an empirical study with the purpose of evaluating the relevance of these perspectives by using a survey questionnaire distributed to software development companies in the Brazilian market. Three hundred thirty nine individuals from different 339 companies were subjects of such a study. The results indicate that the perspectives are relevant for evaluating knowledge and reinforcing the relevance of exploring knowledge capitalisation in software development; therefore, there is a clear understanding of how the knowledge assets involved can be analysed or assessed.}
}
@article{chard2015a,
	title        = {A PROPOSAL FOR USING DESIGN SCIENCE IN EDUCATIONAL TECHNOLOGY RESEARCH PROJECTS},
	author       = {Chard, Susan M},
	year         = 2015,
	journal      = {SMTE},
	pages        = 362,
	abstract     = {Design science is a research paradigm where the development and evaluation of a technology artefact is a keycontribution. Design science is used in many domains and this paper draws on those domains to formulate ageneric structure for design science research suitable for educational technology research projects. The paperincludes guidelines for writing proposals using the design science research methodology for educationaltechnology research and presents a generic research report structure. The paper presents ethical issues to considerin design science research being conducted in educational settings and contributes guidelines for assessment whenthe research contribution involves the creation of a technology artefact.},
	keywords     = {Design Science, Educational technology, IT artefact, assessment}
}
@article{demelo2020the,
	title        = {The measurement process in micro and small software maintenance companies: empirical study},
	author       = {de Melo, Victor Jos{\'e} Aguiar Teixeira and Leal, Gislaine Camila Lapasini and Balancieri, Renato and Rouiller, Ana Cristina and others},
	year         = 2020,
	journal      = {Independent Journal of Management \& Production},
	volume       = 11,
	number       = 2,
	pages        = {519--537},
	abstract     = {With the dissemination of quality models and the need for measurement-based management for software organizations, a variety of approaches and models are emerging to support organizations on this journey. According to a Systematic Review of Literature that selected 30 of 692 papers returned from search sources, it was noticed the need for guidelines and guides regarding the measurement process in a specific sector: micro and small companies that work with software maintenance. In this work, an empirical study was carried out to understand how the measurement process aligned with quality models can be implemented in these organizations. The field study followed the implementation of an improvement program based on CMMI® level 2 in 7 Brazilian companies from Maringá, Paraná. Finally, it was found that the process for the definition of a measurement guide can be common to a specific group of companies, taking steps and guidelines for its execution, always aligned with the organization’s strategy, giving top management an objective view work and process, supporting decision making.}
}
@inproceedings{habtie2016applying,
	title        = {Applying Design Science Research to Design and Evaluate Real-Time Road Traffic State Estimation Framework},
	author       = {Habtie, Ayalew Belay and Abraham, Ajith and Midekso, Dida},
	year         = 2016,
	booktitle    = {Advances in Nature and Biologically Inspired Computing},
	publisher    = {Springer International Publishing},
	address      = {Cham},
	pages        = {223--233},
	isbn         = {978-3-319-27400-3},
	editor       = {Pillay, Nelishia and Engelbrecht, Andries P. and Abraham, Ajith and du Plessis, Mathys C. and Sn{\'a}{\v{s}}el, V{\'a}clav and Muda, Azah Kamilah},
	abstract     = {This paper presents how design science research can be used to design and evaluate real-time road traffic state estimation framework. An integrated framework of the six process steps of design science research process model and the Matching Analysis-Projection-Synthesis (MAPS) tool was used as a research design to develop the proposed state estimation framework. The utility and efficiency of the framework was evaluated based on the adapted design science research evaluation guideline through simulation and the estimation accuracy indicated that reliable road traffic state estimation can be generated based on the developed framework.},
	keywords     = {Design science research, Framework, Artifact, Matching analysis-projection-synthesis (MAPS), Artificial neural network (ANN), Simulation of urban mobility (SUMO)}
}
@article{kalenda2018scaling,
	title        = {Scaling agile in large organizations: Practices, challenges, and success factors},
	author       = {Kalenda, Martin and Hyna, Petr and Rossi, Bruno},
	year         = 2018,
	journal      = {Journal of Software: Evolution and Process},
	volume       = 30,
	number       = 10,
	pages        = {e1954},
	doi          = {https://doi.org/10.1002/smr.1954},
	url          = {https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.1954},
	note         = {e1954 smr.1954},
	keywords     = {action research, agile adoption, large-scale agile, Large-Scale Scrum (LeSS), Scaled Agile Framework (SAFe)},
	eprint       = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/smr.1954},
	abstract     = {Abstract Context: Agile software development has nowadays reached wide adoption. However, moving agile to large-scale contexts is a complex task with many challenges involved. Objective: In this paper, we review practices, challenges, and success factors for scaling agile both from literature and within a large software company, identifying the most critical factors. Method: We conduct a focused literature review to map the importance of scaling practices, challenges, and success factors. The outcome of this focused literature review is used to guide action research within a software company with a view to scaling agile processes. Results: Company culture, prior agile and lean experience, management support, and value unification were found to be key success factors during the action research process. Resistance to change, an overly aggressive roll-out time frame, quality assurance concerns, and integration into preexisting nonagile business processes were found to be the critical challenges in the scaling process. Conclusion: The action research process allowed to cross-fertilize ideas from literature to the company's context. Scaling agile within an organization does not need to follow a specific scheme, rather the process can be tailored to the needs while keeping the core values and principles of agile methodologies.}
}
@inproceedings{tripathi2015university,
	title        = {University-industry collaboration and open source software (OSS) dataset in mining software repositories (MSR) research},
	author       = {Tripathi, Ambika and Dabral, Savita and Sureka, Ashish},
	year         = 2015,
	month        = {March},
	booktitle    = {2015 IEEE 1st International Workshop on Software Analytics (SWAN)},
	volume       = {},
	number       = {},
	pages        = {39--40},
	doi          = {10.1109/SWAN.2015.7070489},
	issn         = {},
	abstract     = {Mining Software Repositories (MSR) is an applied and practise-oriented field aimed at solving real problems encountered by practitioners and bringing value to Industry. We believe that empirical studies on both Open Source Software (OSS) and Closed or Proprietary Source (CSS/PSS) is required in MSR research to increase generalizability or transferability of findings and reduce external (or threats) validity concerns. Furthermore, we believe that a collaboration between University and Industry is must or important in achieving the stated goals and agenda of MSR research (such as deployment and technology transfer). We analyse past five years of research papers published in MSR series of conferences (2010-2014) and count the number of studies using solely OSS data or solely CSS data or both OSS and CSS data. We also count the number of papers published by authors solely from Universities, solely from Industry and from both University and Industry. We present our findings which indicate lack of University-Industry collaboration (measured using co-authorship in scientific publications) and paucity of empirical studies on CSS/PSS data. Our analysis reveals that out of 187 studies over a period of 5 years, 90:9% studies are conducted solely on OSS dataset. We present our findings which indicate that only 14:43% of the studies involve a University-Industry collaboration.},
	keywords     = {Empirical Software Engineering, Generalizabilityand External Validity Concerns, Mining Software Repositories(MSR), Open Source Software (OSS) Dataset, University-IndustryCollaboration}
}
@article{garousi2015a,
	title        = {A bibliometric analysis of the Turkish software engineering research community},
	author       = {Garousi, Vahid},
	year         = 2015,
	month        = {Oct},
	day          = {01},
	journal      = {Scientometrics},
	volume       = 105,
	number       = 1,
	pages        = {23--49},
	doi          = {10.1007/s11192-015-1663-x},
	issn         = {1588-2861},
	url          = {https://doi.org/10.1007/s11192-015-1663-x},
	abstract     = {This paper presents a bibliometric analysis of the Turkish software engineering (SE) community (researchers and institutions). The bibliometric analysis has been conducted based on the number of papers published in the software-engineering-related venues and indexed in the Scopus academic search engine until year 2014. According to the bibliometric analysis, the top-ranked institution is Middle East Technical University, and the top-ranked scholar is Ay{\c{s}}e Ba{\c{s}}ar Bener (formerly with Bo{\u{g}}azi{\c{c}}i University and now with Ryerson University in Canada). The analysis reveals other important findings and presents a set of implications for the Turkish SE community and stakeholders (e.g., funding agencies and decision makers) such as the followings: (1) Turkey produces only about 0.49 {\%} of the world-wide SE knowledge, as measured by the number of papers in Scopus, which is very negligible unfortunately. To take a more active role in the global SE community, the Turkish SE community has to increase their outputs. (2) We notice a lack of diversity in the general SE spectrum, e.g., we noticed very little focus on requirements engineering, software maintenance and evolution, and architecture. This denotes the need to further diversification in SE research topics in Turkey. (3) In total, 89 papers in the pool (30.8 {\%} of the total) are internationally-authored SE papers. Having a good level of international collaborations is a good sign for the Turkish SE community. The highest international collaborations have been with researchers from United States, Canada and Netherlands. (4) In general, the involvement of industry in SE search is low. All stakeholders (e.g., government, industry and academia) should aim at increasing the level of industry-academia collaboration in the Turkish SE community, (5) Citation to Turkish SE papers, in general, are significantly lower than a set of three representative pools of SE papers. This is an area of concern which needs further investigation, and (6) In general, there is a need to increase both the quantity and quality of the Turkish SE papers, in the global stage. The approach we use in this study could be replicated in other countries to provide insights and trends about the SE research performance in other countries.}
}
@inproceedings{pe2016a,
	title        = {A Survey of Types of Industry-Academia Collaboration},
	author       = {Diane L Peters PE and Anne M Lucietto},
	year         = 2016,
	month        = {June},
	booktitle    = {2016 ASEE Annual Conference \& Exposition},
	publisher    = {ASEE Conferences},
	address      = {New Orleans, Louisiana},
	number       = {10.18260/p.26455},
	note         = {https://peer.asee.org/26455},
	abstract     = {Collaborations between industry and academia are, when properly designed and managed, beneficial to both the industry partners and the academic institutions. Such collaborations may take place on both small and large scales, and may involve varying numbers of academic institutions and industry partners. They may also have different purposes, including both research-focused collaborative efforts and programs designed to connect undergraduate students with real-world projects to enhance their education. In this paper, the authors will provide a survey of different models of industry-academia collaboration in engineering and engineering technology. The paper will include both a survey of existing literature on the topic as well as a survey of publicly available information on existing collaborations. While the primary focus is on collaborations within the United States, some literature on international collaborations will also be included in the survey. It will discuss several different collaboration models, and what factors appear to be significant in those collaborations. Finally, it will conclude with recommendations that can be used to study specific aspects of industry-academia collaborations.}
}
@inproceedings{yunxiao2015an,
	title        = {An Improved Indoor Positioning Method Based on Received Signal Strengths},
	author       = {Yunxiao, Li and Sujuan, Qin},
	year         = 2015,
	month        = {Dec},
	booktitle    = {2015 International Conference on Intelligent Transportation, Big Data and Smart City},
	volume       = {},
	number       = {},
	pages        = {90--93},
	doi          = {10.1109/ICITBS.2015.28},
	issn         = {},
	abstract     = {With the economy developing rapidly, Location Based Service (LBS) has attracted more and more people's attention. Indoor positioning methods based on WLAN and RSS with advantage of low cost are most widely used. In this paper, we propose an improved indoor positioning method based on received signal strength to obtain better accuracy. We apply selected weighed K nearest neighbor (WSKNN) to get a better initial point of the gradient-descent-based location search (GLS) which is combined with exhaustive location search (ELS) to achieve a better result. Experimental results conducted in the real environments show that our proposed algorithm can obtain improvement of the mean error distance of 7.17% and 22.54%, compared with the GLS-CF method and traditional KNN method, respectively.},
	keywords     = {Fingerprinting, Indoor Localization, Location Search}
}
@inproceedings{alshahwan2015industry,
	title        = {Industry-academia collaboration in software testing: An overview of TAIC PART 2015},
	author       = {Alshahwan, Nadia and Felderer, Michael and Ramler, Rudolf},
	year         = 2015,
	month        = {April},
	booktitle    = {2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)},
	volume       = {},
	number       = {},
	pages        = {1--2},
	doi          = {10.1109/ICSTW.2015.7107463},
	issn         = {},
	abstract     = {Collaboration between industry and academia in software testing leads to improvement and innovation in industry and it is the basis for achieving sustainable and empirically evaluated results. Thus, the aim of TAIC PART is to forge collaboration between industry and academia on the challenging and exciting problem of real-world software testing. The workshop is promoted by representatives of both industry and academia, bringing together industrial software engineers and testers with researchers working on theory and practice of software testing. This paper presents an overview of the 10th Testing: Academic and Industrial Conference - Practice and Research Techniques (TAIC PART 2015) and its contributions.},
	keywords     = {software testing, industry-academia collaboration, workshop summar}
}
@article{levrouw2020suspense,
	title        = {Suspense as a Driver for University-Industry Collaboration},
	author       = {Levrouw, Leonie M. and van Lubek, Zwanet and Smulders, Frido},
	year         = 2020,
	month        = {Dec.},
	journal      = {Journal of Higher Education Theory and Practice},
	volume       = 20,
	number       = 13,
	doi          = {10.33423/jhetp.v20i13.3835},
	url          = {https://articlegateway.com/index.php/JHETP/article/view/3835},
	abstract     = {The rise of shared global challenges has increased the importance of joint innovation efforts. University-Industry Collaborations (UICs) represent an underexplored opportunity for multi-company initiatives. This article explores how universities can adapt their collaboration offerings toward industry partners so as to better facilitate innovation ecosystems. An empathic design approach was used to examine X!Delft’s ecosystem – part of the valorisation centre of the Delft University of Technology. This revealed one underlying emotional driver of industry partners for participation, namely a shared sense of ‘suspense’ regarding future (technological) developments. Hence, a framework was created to stimulate enduring engagement by cultivating effective suspense.&amp;lt;/p&amp;gt;},
	keywords     = {higher education, suspense, university-industry collaboration, ecosystem innovation, emotional driver, strategic design}
}
@inproceedings{irshad2016capturing,
	title        = {Capturing Cost Avoidance through Reuse: Systematic Literature Review and Industrial Evaluation},
	author       = {Irshad, Mohsin and Torkar, Richard and Petersen, Kai and Afzal, Wasif},
	year         = 2016,
	booktitle    = {Proceedings of the 20th International Conference on Evaluation and Assessment in Software Engineering},
	location     = {Limerick, Ireland},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	series       = {EASE '16},
	doi          = {10.1145/2915970.2915989},
	isbn         = 9781450336918,
	url          = {https://doi.org/10.1145/2915970.2915989},
	abstract     = {Background: Cost avoidance through reuse shows the benefits gained by the software organisations when reusing an artefact. Cost avoidance captures benefits that are not captured by cost savings e.g. spending that would have increased in the absence of the cost avoidance activity. This type of benefit can be combined with quality aspects of the product e.g. costs avoided because of defect prevention. Cost avoidance is a key driver for software reuse. Objectives: The main objectives of this study are: (1) To assess the status of capturing cost avoidance through reuse in the academia; (2) Based on the first objective, propose improvements in capturing of reuse cost avoidance, integrate these into an instrument, and evaluate the instrument in the software industry. Method: The study starts with a systematic literature review (SLR) on capturing of cost avoidance through reuse. Later, a solution is proposed and evaluated in the industry to address the shortcomings identified during the systematic literature review. Results: The results of a systematic literature review describe three previous studies on reuse cost avoidance and show that no solution, to capture reuse cost avoidance, was validated in industry. Afterwards, an instrument and a data collection form are proposed that can be used to capture the cost avoided by reusing any type of reuse artefact. The instrument and data collection form (describing guidelines) were demonstrated to a focus group, as part of static evaluation. Based on the feedback, the instrument was updated and evaluated in industry at 6 development sites, in 3 different countries, covering 24 projects in total. Conclusion: The proposed solution performed well in industrial evaluation. With this solution, practitioners were able to do calculations for reuse costs avoidance and use the results as decision support for identifying potential artefacts to reuse.},
	articleno    = 35,
	numpages     = 12,
	keywords     = {software reuse, cost avoidance, cost savings}
}
@article{demirsoy2018semantic2,
	title        = {Semantic knowledge management system to support software engineers: implementation and static evaluation through interviews at ericsson},
	author       = {Demirsoy, Ali and Petersen, Kai},
	year         = 2018,
	journal      = {e-Informatica Software Engineering Journal},
	volume       = 12,
	number       = 1,
	abstract     = {Background: In large-scale corporations in the software engineering context information overload problems occur as stakeholders continuously produce useful information on process life-cycle issues, matters related to specific products under development, etc. Information overload makes finding relevant information (e.g., how did the company apply the requirements process for product X?) challenging, which is in the primary focus of this paper. Contribution: In this study the authors aimed at evaluating the ease of implementing a semantic knowledge management system at Ericsson, including the essential components of such systems (such as text processing, ontologies, semantic annotation and semantic search). Thereafter, feedback on the usefulness of the system was collected from practitioners. Method: A single case study was conducted at a development site of Ericsson AB in Sweden. Results: It was found that semantic knowledge management systems are challenging to implement, this refers in particular to the implementation and integration of ontologies. Specific ontologies for structuring and filtering are essential, such as domain ontologies and ontologies distinct to the organization. Conclusion: To be readily adopted and transferable to practice, desired ontologies need to be implemented and integrated into semantic knowledge management frameworks with ease, given that the desired ontologies are dependent on organizations and domains.},
	keywords     = {knowledge management, information overload, case study, semantic web}
}
@article{hoda2017systematic,
	title        = {Systematic literature reviews in agile software development: A tertiary study},
	author       = {Rashina Hoda and Norsaremah Salleh and John Grundy and Hui Mien Tee},
	year         = 2017,
	journal      = {Information and Software Technology},
	volume       = 85,
	pages        = {60--70},
	doi          = {https://doi.org/10.1016/j.infsof.2017.01.007},
	issn         = {0950-5849},
	url          = {https://www.sciencedirect.com/science/article/pii/S0950584917300538},
	keywords     = {Agile software development, Tertiary study, Systematic literature reviews, Mapping study},
	abstract     = {Context A number of systematic literature reviews and mapping studies (SLRs) covering numerous primary research studies on various aspects of agile software development (ASD) exist. Objective The aim of this paper is to provide an overview of the SLRs on ASD research topics for software engineering researchers and practitioners. Method We followed the tertiary study guidelines by Kitchenham et al. to find SLRs published between late 1990s to December 2015. Results We found 28 SLRs focusing on ten different ASD research areas: adoption, methods, practices, human and social aspects, CMMI, usability, global software engineering (GSE), organizational agility, embedded systems, and software product line engineering. The number of SLRs on ASD topics, similar to those on software engineering (SE) topics in general, is on the rise. A majority of the SLRs applied standardized guidelines and the quality of these SLRs on ASD topics was found to be slightly higher for journal publications than for conferences. While some individuals and institutions seem to lead this area, the spread of authors and institutions is wide. With respect to prior review recommendations, significant progress was noticed in the area of connecting agile to established domains such as usability, CMMI, and GSE; and considerable progress was observed in focusing on management-oriented approaches as Scrum and sustaining ASD in different contexts such as embedded systems. Conclusion SLRs of ASD studies are on the rise and cover a variety of ASD aspects, ranging from early adoption issues to newer applications of ASD such as in product line engineering. ASD research can benefit from further primary and secondary studies on evaluating benefits and challenges of ASD methods, agile hybrids in large-scale setups, sustainability, motivation, teamwork, and project management; as well as a fresh review of empirical studies in ASD to cover the period post 2008.}
}
@inproceedings{storey2017using,
	title        = {Using a Visual Abstract as a Lens for Communicating and Promoting Design Science Research in Software Engineering},
	author       = {Storey, Margaret-Anne and Engstrom, Emelie and Höst, Martin and Runeson, Per and Bjarnason, Elizabeth},
	year         = 2017,
	month        = {Nov},
	booktitle    = {2017 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)},
	volume       = {},
	number       = {},
	pages        = {181--186},
	doi          = {10.1109/ESEM.2017.28},
	issn         = {},
	abstract     = {Empirical software engineering research aims to generate prescriptive knowledge that can help software engineers improve their work and overcome their challenges, but deriving these insights from real-world problems can be challenging. In this paper, we promote design science as an effective way to produce and communicate prescriptive knowledge. We propose using a visual abstract template to communicate design science contributions and highlight the main problem/solution constructs of this area of research, as well as to present the validity aspects of design knowledge. Our conceptualization of design science is derived from existing literature and we illustrate its use by applying the visual abstract to an example use case. This is work in progress and further evaluation by practitioners and researchers will be forthcoming.},
	keywords     = {Design Science, Visual Abstract, Software Engineering}
}
@article{ali2019on,
	title        = {On the search for industry-relevant regression testing research},
	author       = {Ali, Nauman bin and Engstr{\"o}m, Emelie and Taromirad, Masoumeh and Mousavi, Mohammad Reza and Minhas, Nasir Mehmood and Helgesson, Daniel and Kunze, Sebastian and Varshosaz, Mahsa},
	year         = 2019,
	month        = {Aug},
	day          = {01},
	journal      = {Empirical Software Engineering},
	volume       = 24,
	number       = 4,
	pages        = {2020--2055},
	doi          = {10.1007/s10664-018-9670-1},
	issn         = {1573-7616},
	url          = {https://doi.org/10.1007/s10664-018-9670-1},
	abstract     = {Regression testing is a means to assure that a change in the software, or its execution environment, does not introduce new defects. It involves the expensive undertaking of rerunning test cases. Several techniques have been proposed to reduce the number of test cases to execute in regression testing, however, there is no research on how to assess industrial relevance and applicability of such techniques. We conducted a systematic literature review with the following two goals: firstly, to enable researchers to design and present regression testing research with a focus on industrial relevance and applicability and secondly, to facilitate the industrial adoption of such research by addressing the attributes of concern from the practitioners' perspective. Using a reference-based search approach, we identified 1068 papers on regression testing. We then reduced the scope to only include papers with explicit discussions about relevance and applicability (i.e. mainly studies involving industrial stakeholders). Uniquely in this literature review, practitioners were consulted at several steps to increase the likelihood of achieving our aim of identifying factors important for relevance and applicability. We have summarised the results of these consultations and an analysis of the literature in three taxonomies, which capture aspects of industrial-relevance regarding the regression testing techniques. Based on these taxonomies, we mapped 38 papers reporting the evaluation of 26 regression testing techniques in industrial settings.}
}
@article{rahman2019machine,
	title        = {Machine learning software engineering in practice: An industrial case study},
	author       = {Rahman, Md Saidur and Rivera, Emilio and Khomh, Foutse and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l and Lehnert, Bernd},
	year         = 2019,
	journal      = {arXiv preprint arXiv:1906.07154},
	abstract     = {SAP is the market leader in enterprise software offering an end-to-end suite of applications and services to enable their customers worldwide to operate their business. Especially, retail customers of SAP deal with millions of sales transactions for their day-to-day business. Transactions are created during retail sales at the point of sale (POS) terminals and then sent to some central servers for validations and other business operations. A considerable proportion of the retail transactions may have inconsistencies due to many technical and human errors. SAP provides an automated process for error detection but still requires a manual process by dedicated employees using workbench software for correction. However, manual corrections of these errors are time-consuming, labor-intensive, and may lead to further errors due to incorrect modifications. This is not only a performance overhead on the customers' business workflow but it also incurs high operational costs. Thus, automated detection and correction of transaction errors are very important regarding their potential business values and the improvement in the business workflow. In this paper, we present an industrial case study where we apply machine learning (ML) to automatically detect transaction errors and propose corrections. We identify and discuss the challenges that we faced during this collaborative research and development project, from three distinct perspectives: Software Engineering, Machine Learning, and industry-academia collaboration. We report on our experience and insights from the project with guidelines for the identified challenges. We believe that our findings and recommendations can help researchers and practitioners embarking into similar endeavors.}
}
@inproceedings{kerzazi2016botched,
	title        = {Botched Releases: Do We Need to Roll Back? Empirical Study on a Commercial Web App},
	author       = {Kerzazi, Noureddine and Adams, Bram},
	year         = 2016,
	month        = {March},
	booktitle    = {2016 IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering (SANER)},
	volume       = 1,
	number       = {},
	pages        = {574--583},
	doi          = {10.1109/SANER.2016.114},
	issn         = {},
	abstract     = {Few minutes after a web-based software release, the release team might encounter log traces showing the new system crashing, hanging, or having poor performance. This is the start of the most nerve-wrecking moments of a product's release cycle, i.e., should one run the risk of not doing anything and users losing precious data, or of prematurely engaging the tedious (and costly) roll-back procedure towards the previous release? Thus far, only little attention has been paid by researchers to these so-called "botched releases", partly because of lack of release log data. This paper studies 345 releases of a large e-commerce web app over a period of 1.5 years, in which we identified 17 recurrent root causes of botched releases, classified into four major categories. We then build explanatory models to understand which root causes are the most important, and to explore the factors leading to botched releases.},
	keywords     = {}
}
@inproceedings{venson2016academy,
	title        = {Academy-industry collaboration and the effects of the involvement of undergraduate students in real world activities},
	author       = {Venson, Elaine and Figueiredo, Rejane and Silva, Wander and Ribeiro, Luiz C. M.},
	year         = 2016,
	month        = {Oct},
	booktitle    = {2016 IEEE Frontiers in Education Conference (FIE)},
	volume       = {},
	number       = {},
	pages        = {1--8},
	doi          = {10.1109/FIE.2016.7757394},
	issn         = {},
	abstract     = {As stated by the IEEE Curriculum Guidelines for Undergraduate Degree Programs in Software Engineering, elements outside the classroom such as field trips, visits to industry and technical presentations can affect student's preparation for professional practice. This work describes a framework of academy-industry collaboration where students develop practical and academic activities in a real world scenario. It is a methodological research, in which a case study was conducted with a Government Agency that has a close collaboration with a University. This joint project led to the proposition of new software processes for the organization and produced research and capstone project papers. Results demonstrate that students have acquired experience in solving real world problems in the industry; they received recognition in the academic community through the acceptance of papers in international conferences; and also, the projects executed with the students produced outcomes that brought benefits to the government agency, under study.}
}
@inbook{kumar2015measuring,
	title        = {Measuring Software Reliability: A Trend Using Machine Learning Techniques},
	author       = {Kumar, Nishikant and Banerjee, Soumya},
	year         = 2015,
	booktitle    = {Complex System Modelling and Control Through Intelligent Soft Computations},
	publisher    = {Springer International Publishing},
	address      = {Cham},
	pages        = {807--829},
	doi          = {10.1007/978-3-319-12883-2_28},
	isbn         = {978-3-319-12883-2},
	url          = {https://doi.org/10.1007/978-3-319-12883-2_28},
	editor       = {Zhu, Quanmin and Azar, Ahmad Taher},
	abstract     = {It has become inevitable for every software developer to understand, to follow that how and why software fails, and to express reliability in quantitative terms. This has led to a proliferation of software reliability models to estimate and predict reliability. The basic approach is to model past failure data to predict future behavior. Most of the models have three major components: assumptions, factors and a mathematical function, usually high order exponential or logarithmic used to relate factors to reliability. Software reliability models are used to forecast the curve of failure rate by statistical evidence available during testing phase. They also can indicate about the extra time required to carry out the test procedure in order to meet the specifications and deliver desired functionality with minimum number of defects. Therefore there are challenges whether, autonomous or machine learning techniques like other predictive methods could be able to forecast the reliability measures for a specific software application. This chapter contemplates reliability issue through a generic Machine Learning paradigm while referring the most common aspects of Support Vector Machine scenario. Couples of customized simulation and experimental results have been presented to support the proposed reliability measures and strategies.}
}
@article{ferreira2018codex,
	title        = {Codex: A metamodel ontology to guide the execution of coding experiments},
	author       = {Waldemar Ferreira and Maria Teresa Baldassarre and Sergio Soares},
	year         = 2018,
	journal      = {Computer Standards & Interfaces},
	volume       = 59,
	pages        = {35--44},
	doi          = {https://doi.org/10.1016/j.csi.2018.02.003},
	issn         = {0920-5489},
	url          = {https://www.sciencedirect.com/science/article/pii/S0920548917303197},
	keywords     = {Metamodel, Experiment, Software engineering, Coding experiment, Ontology},
	abstract     = {Background: Experiments have been conducted in many domains of software engineering (SE). Objective: This paper presents a metamodel, the Codex metamodel, containing standard concepts found in any coding experiment. We classify coding experiments as any SE experiment where participants have to carry out coding activities (construct, test, debug, and forth). Method: The paper presents results of an exploratory study that proposes a metamodel for the domain of coding experiments. Besides, we present how our metamodel specifies a real coding experiment. Results: Our metamodel for coding experiments was modeled with few elements, and it can precisely describe all coding activities. Conclusions: Our metamodel facilitates the development of a tool to support executing a coding experiment.}
}
@inproceedings{krüger2017empirical,
	title        = {Empirical Studies in Question-Answering Systems: A Discussion},
	author       = {Krüger, Jacob and Schröter, Ivonne and Kenner, Andy and Leich, Thomas},
	year         = 2017,
	month        = {May},
	booktitle    = {2017 IEEE/ACM 5th International Workshop on Conducting Empirical Studies in Industry (CESI)},
	volume       = {},
	number       = {},
	pages        = {23--26},
	doi          = {10.1109/CESI.2017.6},
	issn         = {},
	abstract     = {Researchers perform empirical studies in industry to gain qualitative insights into a real-world problem. However, common critics are the diversity and selection process of participants. To address these issues, we propose to improve the integration of question-answering systems into empirical study. In this paper, we i) describe approaches to conduct studies in such systems, ii) exemplify corresponding challenges, and iii) discuss their potential. We illustrate the approaches on existing works in which they were partly implemented to show that they can succeed.},
	keywords     = {Exploratory study, observational study, non-participant study, industrial study, methodology}
}
@inproceedings{nostitz-wallwitz2018toward,
	title        = {Toward Improving Industrial Adoption: The Choice of Programming Languages and Development Environments},
	author       = {Nostitz-Wallwitz, Ivonne von and Krüger, Jacob and Leich, Thomas},
	year         = 2018,
	month        = {May},
	booktitle    = {2018 IEEE/ACM 5th International Workshop on Software Engineering Research and Industrial Practice (SER IP)},
	volume       = {},
	number       = {},
	pages        = {10--17},
	doi          = {},
	issn         = {},
	abstract     = {While promising software engineering approaches are proposed every day, only few are adapted by professional developers. There are many potential reasons for this, such as, problems in identifying helpful approaches, missing tools, or lacking practical relevance. With our current research, we are concerned to improve the knowledge transfer from research to practice. In this paper, we discuss the impact of development environments and programming languages on knowledge transfer – considering that many scientific approaches and tools are interesting for professional developers, but rarely adopted by them. We base our discussion mainly on our personal experiences with industry-academia collaborations. To determine whether these experiences also apply to other developers, we additionally conducted a survey with 89 participants from academia and industry. The first results of our on-going work indicate a gap between the development environments and programming languages that are supported or used by researchers and those that are applied in industry. Based on our results, we describe initial discussions that can help to improve collaborations between industry and research.},
	keywords     = {Empirical studies, Software notations and tools, Industrial Adoption}
}
@article{farooq2019gap,
	title        = {Gap between academia and industry: a case of empirical evaluation of three software testing methods},
	author       = {Farooq, Sheikh Umar},
	year         = 2019,
	month        = {Dec},
	day          = {01},
	journal      = {International Journal of System Assurance Engineering and Management},
	volume       = 10,
	number       = 6,
	pages        = {1487--1504},
	doi          = {10.1007/s13198-019-00899-2},
	issn         = {0976-4348},
	url          = {https://doi.org/10.1007/s13198-019-00899-2},
	abstract     = {Doing the right kind of testing has always been one of main challenging and a decisive task for industry. To choose right software testing method(s), industry needs to have an exact objective knowledge of their effectiveness, efficiency, and applicability conditions. The most common way to evaluate testing methods, for such knowledge, is with empirical studies. Reliable and comprehensive evidence can be obtained by aggregating the results of different empirical studies (family of experiments) taking into account their findings and limitations. We conducted a study to investigate the current state of the art of empirical knowledge base of three testing methods. We found that although the empirical studies conducted so far to evaluate testing methods contain many important and interesting results; however, we still lack factual and generalizable knowledge about performance and applicability conditions of testing methods(s), making it unfeasible to be readily adopted by the industry. Moreover, we tried to identify the major factors responsible for limiting academia from producing significantly reliable results having an industrial impact. We believe that besides effective and long-term academia-industry collaboration, there is a need for more systematic, quantifiable and comprehensive empirical studies (which provides scope for aggregation using rigorous techniques), mainly replications so as to create an effective and applicable knowledge base about testing methods which potentially can fill the gap between academia and industry.}
}
@article{aguilar-calderón2019a,
	title        = {A Pearson Correlation Analysis of the SoftwareEngineering Practice in Micro and Small-SizedSoftware Industry of Sinaloa, Mexico},
	author       = {Aguilar-Calderón, José-Alfonso and Zaldívar-Colado, Aníbal and Tripp-Barba, Carolina and Espinoza-Oliva, Roberto and Zurita-Cruz, Carlos-Eduardo},
	year         = 2019,
	month        = {February},
	journal      = {IEEE Latin America Transactions},
	volume       = 17,
	number       = {02},
	pages        = {210--218},
	doi          = {10.1109/TLA.2019.8863166},
	issn         = {1548-0992},
	abstract     = {Is well-known that software development process fordesktop, web or mobile applications in industry needs the adoptionof best practices of Software Engineering. Nevertheless, notmuch contemporary information with regard to current practicesin micro and small-sized software industry exists especially inSinaloa, Mexico. This work presents an exploratory study whichprovides insight into industrial practices in the software industryof Sinaloa. A combination of both qualitative and quantitativedata is collected, using semi-structured interviews and a detailedquestionnaire from sixteen software factories. A Pearson correlationanalysis was performed independently between the variablesCompany location, Scope of coverage, Number of workers, Timeto live in the market, Projects completed, Time dedicated toactivities related to the project, Outdated projects completed inorder to determine the degree of relationship between each ofthe variables mentioned, with all. A correlation analysis and ananalysis of variance were performed. The quantitative resultswill serve to obtain opportunities for further interpretation andcomparison.},
	keywords     = {ANOVA, micro and small-sized software factories, pearson correlation analysis, software engineering}
}
@incollection{chedid2021the,
	title        = {The University Challenge in the Collaboration Relationship With the Industry},
	author       = {Chedid, Marcello and Teixeira, Leonor},
	year         = 2021,
	booktitle    = {Handbook of Research on Modern Educational Technologies, Applications, and Management},
	publisher    = {IGI Global},
	pages        = {449--465},
	abstract     = {Universities suffer from the impact of (1) life cycles associated with technological innovations, (2) the globalization of the economy and culture, (3) the educational needs of an increasingly knowledge-driven society, and (4) the training needs for high-performing professional activities. Solutions to these factors may be found in a positive attitude toward knowledge sharing and collaboration relationships. Collaboration has been considered a way to address the challenges of the 21st century, fostering the necessary innovation, growth, and productivity for all parties involved. Several studies reveal that collaboration can be strongly influenced by knowledge sharing. Collaboration relationships, besides the creation of new knowledge, may result in several outcomes and benefits for the university and society. This chapter aims to address and discuss the university challenges in the collaboration relationships with the industry based on the main results of some empirical studies developed during a research project.}
}
@book{rico2020guidelines,
	title        = {Guidelines for conducting interactive rapid reviews in software engineering -- from a focus on technology transfer to knowledge exchange},
	author       = {Sergio Rico and Ali, {Nauman Bin} and Emelie Engstr{\"o}m and Martin H{\"o}st},
	year         = 2020,
	month        = {Dec},
	day          = 16,
	doi          = {10.5281/zenodo.4327725},
	abstract     = {Evidence-based software engineering (EBSE) aims to improve research utilization in practice. It relies on systematic methods (like systematic literature reviews, systematic mapping studies, and rapid reviews) to identify, appraise, and synthesize existing research findings to answer questions of interest. However, the lack of practitioners' involvement in the design, execution, and reporting of these methods indicates a lack of appreciation for knowledge exchange between researchers and practitioners. Within EBSE, the main reason for conducting these systematic studies is to answer the practitioner's questions and impact practice. However, in many cases, academics have undertaken these studies without any direct involvement of practitioners.This report focuses on the rapid review guidelines and presents practical advice on conducting these with practitioner involvement to facilitate knowledge co-creation.Based on a literature review of rapid reviews and stakeholders engagement in medicine and our experience of using secondary studies in software engineering, we propose extensions to an existing proposal for rapid reviews in software engineering to increase researchers-practitioners knowledge exchange. We refer to the extended method as an interactive rapid review.An interactive rapid review is a streamlined approach to conduct agile literature reviews in close collaboration between researchers and practitioners in software engineering. This report describes the process and discusses possible usage scenarios and some reflections from the proposal's ongoing evaluation.The proposed guidelines will potentially boost knowledge co-creation through active researcher-practitioner interaction by streamlining practitioners' involvement and recognizing the need for an agile process.},
	language     = {English}
}
@inproceedings{karre2016heuristic,
	title        = {Heuristic Approaches to Improve Product Quality in Large Scale Integrated Software Products},
	author       = {Karre, Sai Anirudh and Reddy, Y. Raghu},
	year         = 2016,
	booktitle    = {Evaluation of Novel Approaches to Software Engineering},
	publisher    = {Springer International Publishing},
	address      = {Cham},
	pages        = {80--97},
	isbn         = {978-3-319-30243-0},
	editor       = {Maciaszek, Leszek A. and Filipe, Joaquim},
	abstract     = {Software quality has always been an important criterion for assessing stability of a product. It is quite challenging for large-scale complex products, especially integrated products, to endure and withstand the competition after a new version release in its market domain. Unlike regular software, integrated software products require detailed exploration on the spread and impact of a defect to improve overall product quality. In this paper, we use heuristic approaches like generalized defect dependency approach, control flow graph based approach, and feature correlation based approach to study the widespread of defects in large software and suggest a metric called defect dependency metric to study the dependency of defects. We implemented the generalized defect dependency approach on an industry dataset and gathered noteworthy results. We provide a comparative a study of the heuristic approaches and comprehended their individual usage with observations. We further discuss the need of adoption of such vision in industries as a standard testing practice to improve quality.}
}
@inproceedings{flauzino2021what,
	title        = {What do software team managers want from a skills identification?},
	author       = {Matheus Flauzino and Mauricio Souza and Vinicius Durelli and Rafael Durelli},
	year         = 2021,
	booktitle    = {Anais do IX Workshop de Visualização, Evolução e Manutenção de Software},
	location     = {Joinville},
	publisher    = {SBC},
	address      = {Porto Alegre, RS, Brasil},
	pages        = {16--20},
	doi          = {10.5753/vem.2021.17211},
	issn         = {0000-0000},
	url          = {https://sol.sbc.org.br/index.php/vem/article/view/17211},
	keywords     = {skill identification, development team, team management},
	abstract     = {Searching for developers with the necessary skills to work effectively on a project is not an easy task for companies. For software team managers, it is important to know their team's experience and what technologies they are using in order to be able to allocate resources optimally. Therefore, in this paper, we decided to study the needs of the managers of a software development company in order to identify their team's skills. We carried out a focus group. We have interviewed 11 managers from a development company (with approximately 75 developers). As result we have mapped 5 issues, 4 possible applications and another 7 needs to create a new methodology for identifying skills. Finally, we conclude that managers are interested in a methodology to identify skills in business flow.}
}
@inproceedings{yamakami2020from,
	title        = {From Ivory Tower to Democratization and Industrialization: A Landscape View of Real-World Adaptation of Artificial Intelligence},
	author       = {Yamakami, Toshihiko},
	year         = 2020,
	booktitle    = {Advances in Networked-based Information Systems},
	publisher    = {Springer International Publishing},
	address      = {Cham},
	pages        = {200--211},
	isbn         = {978-3-030-29029-0},
	editor       = {Barolli, Leonard and Nishino, Hiroaki and Enokido, Tomoya and Takizawa, Makoto},
	abstract     = {Deep learning is a hot research topic during 2010s. The rapid advances and data and computing-intensive characteristics of deep learning isolated ordinary people from the technology. However, as the technology advances, there are some visible signs of socialization in deep learning. The author presents the concept of democratization and industrialization of deep learning. Then, the author describes this trend as a new landscape view of AI technology. Finally, the author describes a 3-stage model of interaction between social community and technology in the era of digital transformation.}
}
@inproceedings{karre2015an,
	title        = {An Industrial Case Study on Improving Quality in Integrated Software Product using defect dependency.},
	author       = {Karre, Sai Anirudh and Reddy, Y Raghu},
	year         = 2015,
	booktitle    = {QuASoQ/WAWSE/CMCE@ APSEC},
	pages        = {1--8},
	abstract     = {Product based organizations have diverse product offerings that meet various business needs. The products are in turn integrated to create integrated product suites. Rigorous product engineering is a must for creation of high quality integrated software products. Adequate measures must be taken to improve quality of the integrated product before every release of its module or sub-product. It is hard to imagine upgrading an integrated software product with unidentified defects prior to its release. In this paper, we share our observations on implementing a defect dependency metric to identify the dependency of a defect over a real-time industry defect dataset of an integrated software product. This defect dependency metric was captured and analyzed during release cycle(s) to avoid surprise issues post product launch.},
	keywords     = {integrated software products, software quality, defect, defect dependency, software metric, product development, rough-set theory, defect widesprea}
}
@article{GAROUSI2016106,
	title        = {Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature review},
	author       = {Vahid Garousi and Kai Petersen and Baris Ozkan},
	year         = 2016,
	journal      = {Information and Software Technology},
	volume       = 79,
	pages        = {106--127},
	doi          = {https://doi.org/10.1016/j.infsof.2016.07.006},
	issn         = {0950-5849},
	url          = {https://www.sciencedirect.com/science/article/pii/S0950584916301203},
	keywords     = {Software engineering, Industry-academia collaborations, Industry, Universities, Challenges, Success patterns, Best practices, Systematic literature review},
	abstract     = {Context: The global software industry and the software engineering (SE) academia are two large communities. However, unfortunately, the level of joint industry-academia collaborations in SE is still relatively very low, compared to the amount of activity in each of the two communities. It seems that the two ’camps’ show only limited interest/motivation to collaborate with one other. Many researchers and practitioners have written about the challenges, success patterns (what to do, i.e., how to collaborate) and anti-patterns (what not do do) for industry-academia collaborations. Objective: To identify (a) the challenges to avoid risks to the collaboration by being aware of the challenges, (b) the best practices to provide an inventory of practices (patterns) allowing for an informed choice of practices to use when planning and conducting collaborative projects. Method: A systematic review has been conducted. Synthesis has been done using grounded-theory based coding procedures. Results: Through thematic analysis we identified 10 challenge themes and 17 best practice themes. A key outcome was the inventory of best practices, the most common ones recommended in different contexts were to hold regular workshops and seminars with industry, assure continuous learning from industry and academic sides, ensure management engagement, the need for a champion, basing research on real-world problems, showing explicit benefits to the industry partner, be agile during the collaboration, and the co-location of the researcher on the industry side. Conclusion: Given the importance of industry-academia collaboration to conduct research of high practical relevance we provide a synthesis of challenges and best practices, which can be used by researchers and practitioners to make informed decisions on how to structure their collaborations.}
}
@article{STARON201676,
	title        = {MeSRAM - A method for assessing robustness of measurement programs in large software development organizations and its industrial evaluation},
	author       = {Miroslaw Staron and Wilhelm Meding},
	year         = 2016,
	journal      = {Journal of Systems and Software},
	volume       = 113,
	pages        = {76--100},
	doi          = {https://doi.org/10.1016/j.jss.2015.10.051},
	issn         = {0164-1212},
	url          = {https://www.sciencedirect.com/science/article/pii/S0164121215002368},
	keywords     = {Measurement program, Software engineering, Metrics, Case study},
	abstract     = {Measurement programs in large software development organizations contain a large number of indicators, base and derived measures to monitor products, processes and projects. The diversity and the number of these measures causes the measurement programs to become large, combining multiple needs, measurement tools and organizational goals. For the measurement program to effectively support organizationâs goals, it should be scalable, automated, standardized and flexible â i.e. robust. In this paper we present a method for assessing the robustness of measurement programs. The method is based on the robustness model which has been developed in collaboration between seven companies and a university. The purpose of the method is to support the companies to optimize the value obtained from the measurement programs and their cost. We evaluated the method at the seven companies and the results from applying the method to each company quantified the robustness of their programs, reflecting the real-world status of the programs and pinpointed strengths and improvements of the programs.}
}
@article{MARTINEZFERNANDEZ201737,
	title        = {Benefits and drawbacks of software reference architectures: A case study},
	author       = {Silverio MartÃ­nez-FernÃ¡ndez and Claudia P. Ayala and Xavier Franch and Helena Martins Marques},
	year         = 2017,
	journal      = {Information and Software Technology},
	volume       = 88,
	pages        = {37--52},
	doi          = {https://doi.org/10.1016/j.infsof.2017.03.011},
	issn         = {0950-5849},
	url          = {https://www.sciencedirect.com/science/article/pii/S0950584916304438},
	keywords     = {Software architecture, Reference architecture, Empirical software engineering, Case study, Benefits, Drawbacks},
	abstract     = {Context Software Reference Architectures (SRAs) play a fundamental role for organizations whose business greatly depends on the efficient development and maintenance of complex software applications. However, little is known about the real value and risks associated with SRAs in industrial practice. Objective To investigate the current industrial practice of SRAs in a single company from the perspective of different stakeholders. Method An exploratory case study that investigates the benefits and drawbacks perceived by relevant stakeholders in nine SRAs designed by a multinational software consulting company. Results The study shows the perceptions of different stakeholders regarding the benefits and drawbacks of SRAs (e.g., both SRA designers and users agree that they benefit from reduced development costs; on the contrary, only application builders strongly highlighted the extra learning curve as a drawback associated with mastering SRAs). Furthermore, some of the SRA benefits and drawbacks commonly highlighted in the literature were remarkably not mentioned as a benefit of SRAs (e.g., the use of best practices). Likewise, other aspects arose that are not usually discussed in the literature, such as higher time-to-market for applications when their dependencies on the SRA are managed inappropriately. Conclusions This study aims to help practitioners and researchers to better understand real SRAs projects and the contexts where these benefits and drawbacks appeared, as well as some SRA improvement strategies. This would contribute to strengthening the evidence regarding SRAs and support practitioners in making better informed decisions about the expected SRA benefits and drawbacks. Furthermore, we make available the instruments used in this study and the anonymized data gathered to motivate others to provide similar evidence to help mature SRA research and practice.}
}
@article{takahashi2018collaborative,
	title        = {Collaborative research project networks: Knowledge transfer at the fuzzy front end of innovation},
	author       = {Takahashi, Marissa and Indulska, Marta and Steen, John},
	year         = 2018,
	journal      = {Project Management Journal},
	publisher    = {Sage Publications Sage CA: Los Angeles, CA},
	volume       = 49,
	number       = 4,
	pages        = {36--52},
	keywords     = {collaborative research project network, knowledge transfer, social network analysis, fuzzy front end of innovation, MRQAP, meta-analysis},
	abstract     = {Many businesses seeking enhanced innovation have corporate research teams that engage in collaborative research projects (CRPs), with external entities such as universities, public organizations, or customers. Anecdotal evidence, however, suggests mixed outcomes of CRPs in terms of corporate research impact, which implies successful transfer of novel knowledge generated within CRPs to company-internal business networks to develop radically innovative products. We use the multiple regression quadratic assignment procedure (MRQAP) and meta-analysis to analyze six CRP networks. Our findings indicate that the network’s relational characteristics (tie strength) and structural characteristics (network range) are important determinants of knowledge transfer at the fuzzy front end of innovation.}
}
@inproceedings{domanska2018cooperation,
	title        = {Cooperation between knowledge-based institutions and business: empirical studies and network theories},
	author       = {Doma{\'n}ska, Agnieszka and others},
	year         = 2018,
	booktitle    = {Forum Scientiae Oeconomia},
	volume       = 6,
	number       = 4,
	pages        = {81--94},
	organization = {Wydawnictwo Naukowe Akademii WSB},
	keywords     = {Start-up business, social network theories, cooperation be-tween business and science},
	abstract     = {The issue of broadly-understood ties and collaboration be-tween business and science is one of the key issues con-stituting the foundations for the modern knowledge-based economy, which relies on innovations and competitiveness in technically and scientifically advanced branches. The article outlines the theoretical perspective for studies on the effects of this cooperation. Taking into consideration the richness of the aspects and sub-issues of the problem which should be analysed, the paper implicitly prepares the “groundwork” for more detailed empirical studies based on the overview of different approaches and methods used in the literature, concluding - not only from the literature but mainly from the special characteristics of the “start-up world” - that the most suitable theoretical approach for properly con-structed empirical studies is the network theory in general and the social capital perspective in particular. The subject of “hard” forms of cooperation between science institutions and business (start-ups in particular) requires more insight into the network approach to entrepreneurship. Secondly, the article presents an overview of the literature, concentrat-ing on studies which analyse cooperation between knowl-edge-based entities (universities) and business in practice, as well as a detailed example of one such case study. The case study which was discovered in the literature, namely cooperation between Ericsson and ITU, is related to net-work concepts discussed in the theoretical part.}
}
@article{sanno2019increasing,
	title        = {Increasing the impact of industry--academia collaboration through co-production},
	author       = {Sann{\"o}, Anna and {\"O}berg, Anna Ericson and Flores-Garcia, Erik and Jackson, Mats},
	year         = 2019,
	journal      = {Technology Innovation Management Review},
	volume       = 9,
	number       = 4,
	keywords     = {},
	abstract     = {Increased competition and globalization motivate us to join forces to enhance the impact of the research conducted. Collaboration between organizations with different views can, however, be difficult to manage and needs awareness and skills to meet different expectations. This article will consider both a mutual industrial and academic perspective into the development of action research and, in six research project cases, empirically explore how the impact can be enhanced by considering certain key factors in the research process. How the phases of problem formulation, methodology, and results are managed is critical for the success of a collaboration and, thereby, its impact. Counter-productive forces that could dilute the progress over time need to be considered given that combining practical relevance and scientific rigour comes with challenges.}
}
@inproceedings{peters2016survey,
	title        = {A survey of types of industry-academia collaboration},
	author       = {Peters, Diane L and Lucietto, Anne M},
	year         = 2016,
	booktitle    = {2016 ASEE Annual Conference \& Exposition},
	keywords     = {},
	abstract     = {Collaborations between industry and academia are, when properly designed and managed, beneficial to both the industry partners and the academic institutions. Such collaborations may take place on both small and large scales, and may involve varying numbers of academic institutions and industry partners. They may also have different purposes, including both research-focused collaborative efforts and programs designed to connect undergraduate students with real-world projects to enhance their education. In this paper, the authors will provide a survey of different models of industry-academia collaboration in engineering and engineering technology. The paper will include both a survey of existing literature on the topic as well as a survey of publicly available information on existing collaborations. While the primary focus is on collaborations within the United States, some literature on international collaborations will also be included in the survey. It will discuss several different collaboration models, and what factors appear to be significant in those collaborations. Finally, it will conclude with recommendations that can be used to study specific aspects of industry-academia collaborations.}
}
@incollection{staron2020action,
	title        = {Action Research as Research Methodology in Software Engineering},
	author       = {Staron, Miroslaw},
	year         = 2020,
	booktitle    = {Action Research in Software Engineering},
	publisher    = {Springer},
	pages        = {15--36},
	keywords     = {},
	abstract     = {Compared to other research methodologies, action research is probably the youngest one. It’s been introduced in the middle of the twentieth century and has gained attention ever since. It became popular because it appeals to both researchers and organizations who seek impact and utilization of scientific results in practice. In this chapter, we present the principles of action research and provide concrete guidelines on how to propose an action research project. We elaborate on the main parts of the action research methodology and exemplify them. We show how we can use experiment systems to involve customers in action research, and we finish the chapter by presenting how to manage action research projects.}
}
@inproceedings{guillot2017case,
	title        = {Case studies of industry-academia research collaborations for software development with agile},
	author       = {Guillot, Isabelle and Paulmani, Geetha and Kumar, Vivekanandan and Fraser, Shawn N},
	year         = 2017,
	booktitle    = {CYTED-RITOS International Workshop on Groupware},
	pages        = {196--212},
	organization = {Springer},
	keywords     = {Agile, Scrum, Research collaboration, Distributed research team},
	abstract     = {Successful industry-academia research collaborations (IARCs) in the software development area can be challenging. The literature identifies best practices in IARCs along with process frameworks with the aim of ensuring successful outcomes for both industry and academia, namely: funding opportunities for universities, training and employment possibilities for students, new knowledge leading to innovative products for industry, and on-time delivery of software benefiting the economy, the institution, and the community. This paper shows ways in which core principles of the project management approach, Agile, and the Scrum framework have been applied and have led to the success of three IARCs. In addition to IARCs’ common challenges, these case studies represented additional challenges as they were short-term software development projects accomplished by small geographically distributed teams. A report of the demographic, collaboration setting, and challenges, along with the lessons learned from the application of Agile and Scrum in these case studies will contribute to the body of knowledge in the field of IARCs. Using a qualitative and quantitative approach, five Agile/Scrum aspects for each project are assessed: product ownership, release, sprint, team, and technical health. Findings indicate several success factors directly linked to the application of the Agile principles and the Scrum framework. Specifically, early and frequent customer-centric software delivery, constant communications, responsiveness to change, and highly motivated individuals were key in terms of realizing the positive outcomes in spite of the obstacles inherent to IARCs. Cautions to this approach when applied in IARCs are reported along with solutions.}
}
@inproceedings{10.1145/2856636.2856644,
	title        = {A Systematic Mapping Study of the Current Practice of Indian Software Engineering},
	author       = {Barn, Balbir S. and Clark, Tony and Ali, Almaas and Arif, Rabia},
	year         = 2016,
	booktitle    = {Proceedings of the 9th India Software Engineering Conference},
	location     = {Goa, India},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	series       = {ISEC '16},
	pages        = {89–98},
	doi          = {10.1145/2856636.2856644},
	isbn         = 9781450340182,
	url          = {https://doi.org/10.1145/2856636.2856644},
	abstract     = {Systematic mapping studies are an important research method and have been used in software engineering to provide an overview of a research area by a process of classification and counting of the outputs in a particular area. They have also been used to examine the outputs found in specific publication outlets. In this paper, we report on the results of a systematic mapping study conducted to review the entire publication output of the Indian Software Engineering Conference (ISEC) series. We use the outputs of the study to present visual depictions of the nature of Indian Software Engineering academic research from 2008--2015. A second contribution of the work reports on comparison of the ISEC series with that of the pre-eminent international conference in software engineering (ICSE). We contextualise the results within the wider picture of the national Indian IT community.},
	numpages     = 10,
	keywords     = {ISEC, Indian IT Industry, Systematic Mapping Study}
}
@article{sen2018certus,
	title        = {Certus: an organizational effort towards research-based innovation in software verification and validation},
	author       = {Sen, Sagar and Marijan, Dusica and Gotlieb, Arnaud},
	year         = 2018,
	journal      = {International Journal of System Assurance Engineering and Management},
	publisher    = {Springer},
	volume       = 9,
	number       = 2,
	pages        = {313--322},
	keywords     = {Organization, Certus, Software V&V, Annual work plan, Evaluation},
	abstract    = {What is gratifying to a software engineering researcher? Three of many possible answers to this question are (a) the intellectual exercise in developing/disseminating approaches that address emerging and existing challenges, (b) recognition from impact in a community of researchers and (c) widespread use of novel ideas, including software, in the society at large leading to enhancement of human ability and job creation. A culmination of these sources requires an organizational effort. This article presents a detailed account of a research-based innovation centre, Certus, to facilitate such a culmination for software engineering researchers. Certus has established a body of knowledge, methods and tools for the validation and verification of software systems in the Norwegian private and public sector. Certus works in close cooperation with five founding user partners and is hosted by the Simula Research Laboratory. We present the organizational structure of Certus and describe how Certus’s life and health is planned and evaluated on a regular basis as a research-based innovation centre. We expound two successful collaborations, with (a) the private sector entity Cisco systems, Norway and (b) the public sector entity the Norwegian Customs and Excise. We hope that this document will serve as a basis to encourage national/international funding schemes to create call for proposals for long-term research-based innovation centres. This, we believe, is one way to justify use of tax payers resources in creating a win–win situation for the triple helix: government, researchers and industry.}
}
@article{garousi2020exploring,
	title        = {Exploring the industry's challenges in software testing: An empirical study},
	author       = {Garousi, Vahid and Felderer, Michael and Kuhrmann, Marco and Herkilo{\u{g}}lu, Kadir and Eldh, Sigrid},
	year         = 2020,
	journal      = {Journal of Software: Evolution and Process},
	publisher    = {Wiley Online Library},
	volume       = 32,
	number       = 8,
	pages        = {e2251},
	keywords     = {Software testing, software industry, challenges, opinion survey},
	abstract     = {Context: Software testing is an important and costly software engineering activity in the industry. Despite the efforts of the software testing research community in the last several decades, various studies show that still many practitioners in the industry report challenges in their software testing tasks. Objective: To shed light on industry's challenges in software testing, we characterize and synthesize the challenges reported by practitioners. Such concrete challenges can then be used for a variety of purposes, eg, research collaborations between industry and academia. Method: Our empirical research method is opinion survey. By designing an online survey, we solicited practitioners' opinions about their challenges in different testing activities. Our dataset includes data from 72 practitioners from eight different countries. Results:  Our results show that test management and test automation are considered the most challenging among all testing activities by practitioners. Our results also include a set of 104 concrete challenges in software testing that may need further investigations by the research community. Conclusion: We conclude that the focal points of industrial work and academic research in software testing differ. Furthermore, the paper at hand provides valuable insights concerning practitioners' “pain” points and, thus, provides researchers with a source of important research topics of high practical relevance.}
}
